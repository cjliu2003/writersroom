<testsuites id="" name="" tests="91" failures="91" skipped="0" errors="0" time="43.162726">
<testsuite name="upload-workflow.spec.ts" timestamp="2025-09-22T21:33:59.886Z" hostname="chromium" tests="13" failures="13" skipped="0" time="26.796" errors="0">
<testcase name="FDX Upload Workflow › should upload and parse a valid FDX file" classname="upload-workflow.spec.ts" time="7.053">
<failure message="upload-workflow.spec.ts:23:7 should upload and parse a valid FDX file" type="FAILURE">
<![CDATA[  [chromium] › upload-workflow.spec.ts:23:7 › FDX Upload Workflow › should upload and parse a valid FDX file 

    Error: expect(locator).toBeVisible() failed

    Locator:  locator('[data-testid="upload-area"]')
    Expected: visible
    Received: <element(s) not found>
    Timeout:  5000ms

    Call log:
      - Expect "toBeVisible" with timeout 5000ms
      - waiting for locator('[data-testid="upload-area"]')


      26 |
      27 |     // Wait for the upload area to be visible
    > 28 |     await expect(page.locator('[data-testid="upload-area"]')).toBeVisible();
         |                                                               ^
      29 |
      30 |     // Upload a test FDX file
      31 |     const fileInput = page.locator('input[type="file"]');
        at /Users/ltw/Documents/GitHub/writersroom/frontend/e2e/upload-workflow.spec.ts:28:63

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ../test-results/upload-workflow-FDX-Upload-9bda4--and-parse-a-valid-FDX-file-chromium/test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ../test-results/upload-workflow-FDX-Upload-9bda4--and-parse-a-valid-FDX-file-chromium/error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|upload-workflow-FDX-Upload-9bda4--and-parse-a-valid-FDX-file-chromium/test-failed-1.png]]

[[ATTACHMENT|upload-workflow-FDX-Upload-9bda4--and-parse-a-valid-FDX-file-chromium/error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="FDX Upload Workflow › should display error for invalid FDX file" classname="upload-workflow.spec.ts" time="2.085">
<failure message="upload-workflow.spec.ts:51:7 should display error for invalid FDX file" type="FAILURE">
<![CDATA[  [chromium] › upload-workflow.spec.ts:51:7 › FDX Upload Workflow › should display error for invalid FDX file 

    Error: ENOENT: no such file or directory, stat '/Users/ltw/Documents/GitHub/writersroom/frontend/__tests__/fixtures/invalid-file.txt'

      55 |     const fileInput = page.locator('input[type="file"]');
      56 |     const invalidFile = path.join(__dirname, '../__tests__/fixtures/invalid-file.txt');
    > 57 |     await fileInput.setInputFiles(invalidFile);
         |     ^
      58 |
      59 |     // Wait for and verify error message
      60 |     await expect(page.locator('[data-testid="error-message"]')).toBeVisible({ timeout: 5000 });
        at /Users/ltw/Documents/GitHub/writersroom/frontend/e2e/upload-workflow.spec.ts:57:5

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ../test-results/upload-workflow-FDX-Upload-98dc0--error-for-invalid-FDX-file-chromium/test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ../test-results/upload-workflow-FDX-Upload-98dc0--error-for-invalid-FDX-file-chromium/error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|upload-workflow-FDX-Upload-98dc0--error-for-invalid-FDX-file-chromium/test-failed-1.png]]

[[ATTACHMENT|upload-workflow-FDX-Upload-98dc0--error-for-invalid-FDX-file-chromium/error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="FDX Upload Workflow › should preserve scene order from FDX file" classname="upload-workflow.spec.ts" time="2.027">
<failure message="upload-workflow.spec.ts:64:7 should preserve scene order from FDX file" type="FAILURE">
<![CDATA[  [chromium] › upload-workflow.spec.ts:64:7 › FDX Upload Workflow › should preserve scene order from FDX file 

    Error: ENOENT: no such file or directory, stat '/Users/ltw/Documents/GitHub/writersroom/frontend/__tests__/fixtures/fdx/valid/multiple-scenes.fdx'

      68 |     const fileInput = page.locator('input[type="file"]');
      69 |     const testFilePath = path.join(__dirname, '../__tests__/fixtures/fdx/valid/multiple-scenes.fdx');
    > 70 |     await fileInput.setInputFiles(testFilePath);
         |     ^
      71 |
      72 |     // Wait for parsing
      73 |     await expect(page.locator('[data-testid="loading-overlay"]')).toBeHidden({ timeout: 10000 });
        at /Users/ltw/Documents/GitHub/writersroom/frontend/e2e/upload-workflow.spec.ts:70:5

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ../test-results/upload-workflow-FDX-Upload-1ff41-e-scene-order-from-FDX-file-chromium/test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ../test-results/upload-workflow-FDX-Upload-1ff41-e-scene-order-from-FDX-file-chromium/error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|upload-workflow-FDX-Upload-1ff41-e-scene-order-from-FDX-file-chromium/test-failed-1.png]]

[[ATTACHMENT|upload-workflow-FDX-Upload-1ff41-e-scene-order-from-FDX-file-chromium/error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="FDX Upload Workflow › should handle large FDX files" classname="upload-workflow.spec.ts" time="2.104">
<properties>
<property name="slow" value="">
</property>
</properties>
<failure message="upload-workflow.spec.ts:88:7 should handle large FDX files" type="FAILURE">
<![CDATA[  [chromium] › upload-workflow.spec.ts:88:7 › FDX Upload Workflow › should handle large FDX files ──

    Error: ENOENT: no such file or directory, stat '/Users/ltw/Documents/GitHub/writersroom/frontend/__tests__/fixtures/fdx/large/feature-film.fdx'

      94 |     const fileInput = page.locator('input[type="file"]');
      95 |     const largeFilePath = path.join(__dirname, '../__tests__/fixtures/fdx/large/feature-film.fdx');
    > 96 |     await fileInput.setInputFiles(largeFilePath);
         |     ^
      97 |
      98 |     // Wait for parsing with extended timeout
      99 |     await expect(page.locator('[data-testid="loading-overlay"]')).toBeVisible();
        at /Users/ltw/Documents/GitHub/writersroom/frontend/e2e/upload-workflow.spec.ts:96:5

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ../test-results/upload-workflow-FDX-Upload-9adbb-ould-handle-large-FDX-files-chromium/test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ../test-results/upload-workflow-FDX-Upload-9adbb-ould-handle-large-FDX-files-chromium/error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|upload-workflow-FDX-Upload-9adbb-ould-handle-large-FDX-files-chromium/test-failed-1.png]]

[[ATTACHMENT|upload-workflow-FDX-Upload-9adbb-ould-handle-large-FDX-files-chromium/error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="FDX Upload Workflow › should support drag and drop upload" classname="upload-workflow.spec.ts" time="6.287">
<failure message="upload-workflow.spec.ts:113:7 should support drag and drop upload" type="FAILURE">
<![CDATA[  [chromium] › upload-workflow.spec.ts:113:7 › FDX Upload Workflow › should support drag and drop upload 

    Error: expect(locator).toBeVisible() failed

    Locator:  locator('[data-testid="upload-area"]')
    Expected: visible
    Received: <element(s) not found>
    Timeout:  5000ms

    Call log:
      - Expect "toBeVisible" with timeout 5000ms
      - waiting for locator('[data-testid="upload-area"]')


      115 |
      116 |     const dropZone = page.locator('[data-testid="upload-area"]');
    > 117 |     await expect(dropZone).toBeVisible();
          |                            ^
      118 |
      119 |     // Create a DataTransfer to simulate drag and drop
      120 |     const testFilePath = path.join(__dirname, '../__tests__/fixtures/fdx/valid/standard-screenplay.fdx');
        at /Users/ltw/Documents/GitHub/writersroom/frontend/e2e/upload-workflow.spec.ts:117:28

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ../test-results/upload-workflow-FDX-Upload-94f38-upport-drag-and-drop-upload-chromium/test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ../test-results/upload-workflow-FDX-Upload-94f38-upport-drag-and-drop-upload-chromium/error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|upload-workflow-FDX-Upload-94f38-upport-drag-and-drop-upload-chromium/test-failed-1.png]]

[[ATTACHMENT|upload-workflow-FDX-Upload-94f38-upport-drag-and-drop-upload-chromium/error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="FDX Upload Workflow › should maintain editor state after page refresh" classname="upload-workflow.spec.ts" time="1.283">
<failure message="upload-workflow.spec.ts:153:7 should maintain editor state after page refresh" type="FAILURE">
<![CDATA[  [chromium] › upload-workflow.spec.ts:153:7 › FDX Upload Workflow › should maintain editor state after page refresh 

    Error: ENOENT: no such file or directory, stat '/Users/ltw/Documents/GitHub/writersroom/frontend/__tests__/fixtures/fdx/valid/standard-screenplay.fdx'

      157 |     const fileInput = page.locator('input[type="file"]');
      158 |     const testFilePath = path.join(__dirname, '../__tests__/fixtures/fdx/valid/standard-screenplay.fdx');
    > 159 |     await fileInput.setInputFiles(testFilePath);
          |     ^
      160 |
      161 |     // Wait for parsing
      162 |     await expect(page.locator('[data-testid="loading-overlay"]')).toBeHidden({ timeout: 10000 });
        at /Users/ltw/Documents/GitHub/writersroom/frontend/e2e/upload-workflow.spec.ts:159:5

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ../test-results/upload-workflow-FDX-Upload-9f611-or-state-after-page-refresh-chromium/test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ../test-results/upload-workflow-FDX-Upload-9f611-or-state-after-page-refresh-chromium/error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|upload-workflow-FDX-Upload-9f611-or-state-after-page-refresh-chromium/test-failed-1.png]]

[[ATTACHMENT|upload-workflow-FDX-Upload-9f611-or-state-after-page-refresh-chromium/error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="FDX Upload Workflow › should navigate between scenes via sidebar" classname="upload-workflow.spec.ts" time="1.294">
<failure message="upload-workflow.spec.ts:187:7 should navigate between scenes via sidebar" type="FAILURE">
<![CDATA[  [chromium] › upload-workflow.spec.ts:187:7 › FDX Upload Workflow › should navigate between scenes via sidebar 

    Error: ENOENT: no such file or directory, stat '/Users/ltw/Documents/GitHub/writersroom/frontend/__tests__/fixtures/fdx/valid/multiple-scenes.fdx'

      191 |     const fileInput = page.locator('input[type="file"]');
      192 |     const testFilePath = path.join(__dirname, '../__tests__/fixtures/fdx/valid/multiple-scenes.fdx');
    > 193 |     await fileInput.setInputFiles(testFilePath);
          |     ^
      194 |
      195 |     // Wait for parsing
      196 |     await expect(page.locator('[data-testid="loading-overlay"]')).toBeHidden({ timeout: 10000 });
        at /Users/ltw/Documents/GitHub/writersroom/frontend/e2e/upload-workflow.spec.ts:193:5

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ../test-results/upload-workflow-FDX-Upload-794c8--between-scenes-via-sidebar-chromium/test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ../test-results/upload-workflow-FDX-Upload-794c8--between-scenes-via-sidebar-chromium/error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|upload-workflow-FDX-Upload-794c8--between-scenes-via-sidebar-chromium/test-failed-1.png]]

[[ATTACHMENT|upload-workflow-FDX-Upload-794c8--between-scenes-via-sidebar-chromium/error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="FDX Upload Workflow › should show scene summaries in sidebar" classname="upload-workflow.spec.ts" time="0.934">
<failure message="upload-workflow.spec.ts:210:7 should show scene summaries in sidebar" type="FAILURE">
<![CDATA[  [chromium] › upload-workflow.spec.ts:210:7 › FDX Upload Workflow › should show scene summaries in sidebar 

    Error: ENOENT: no such file or directory, stat '/Users/ltw/Documents/GitHub/writersroom/frontend/__tests__/fixtures/fdx/valid/standard-screenplay.fdx'

      214 |     const fileInput = page.locator('input[type="file"]');
      215 |     const testFilePath = path.join(__dirname, '../__tests__/fixtures/fdx/valid/standard-screenplay.fdx');
    > 216 |     await fileInput.setInputFiles(testFilePath);
          |     ^
      217 |
      218 |     // Wait for parsing
      219 |     await expect(page.locator('[data-testid="loading-overlay"]')).toBeHidden({ timeout: 10000 });
        at /Users/ltw/Documents/GitHub/writersroom/frontend/e2e/upload-workflow.spec.ts:216:5

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ../test-results/upload-workflow-FDX-Upload-9ffe0--scene-summaries-in-sidebar-chromium/test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ../test-results/upload-workflow-FDX-Upload-9ffe0--scene-summaries-in-sidebar-chromium/error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|upload-workflow-FDX-Upload-9ffe0--scene-summaries-in-sidebar-chromium/test-failed-1.png]]

[[ATTACHMENT|upload-workflow-FDX-Upload-9ffe0--scene-summaries-in-sidebar-chromium/error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="FDX Upload Workflow › should display scene metadata correctly" classname="upload-workflow.spec.ts" time="1.075">
<failure message="upload-workflow.spec.ts:233:7 should display scene metadata correctly" type="FAILURE">
<![CDATA[  [chromium] › upload-workflow.spec.ts:233:7 › FDX Upload Workflow › should display scene metadata correctly 

    Error: ENOENT: no such file or directory, stat '/Users/ltw/Documents/GitHub/writersroom/frontend/__tests__/fixtures/fdx/valid/standard-screenplay.fdx'

      237 |     const fileInput = page.locator('input[type="file"]');
      238 |     const testFilePath = path.join(__dirname, '../__tests__/fixtures/fdx/valid/standard-screenplay.fdx');
    > 239 |     await fileInput.setInputFiles(testFilePath);
          |     ^
      240 |
      241 |     // Wait for parsing
      242 |     await expect(page.locator('[data-testid="loading-overlay"]')).toBeHidden({ timeout: 10000 });
        at /Users/ltw/Documents/GitHub/writersroom/frontend/e2e/upload-workflow.spec.ts:239:5

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ../test-results/upload-workflow-FDX-Upload-b70a6-ay-scene-metadata-correctly-chromium/test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ../test-results/upload-workflow-FDX-Upload-b70a6-ay-scene-metadata-correctly-chromium/error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|upload-workflow-FDX-Upload-b70a6-ay-scene-metadata-correctly-chromium/test-failed-1.png]]

[[ATTACHMENT|upload-workflow-FDX-Upload-b70a6-ay-scene-metadata-correctly-chromium/error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Upload Error Handling › should reject non-FDX files" classname="upload-workflow.spec.ts" time="0.681">
<failure message="upload-workflow.spec.ts:274:7 should reject non-FDX files" type="FAILURE">
<![CDATA[  [chromium] › upload-workflow.spec.ts:274:7 › Upload Error Handling › should reject non-FDX files ─

    Error: ENOENT: no such file or directory, stat '/Users/ltw/Documents/GitHub/writersroom/frontend/__tests__/fixtures/test-document.pdf'

      277 |     // Try uploading a PDF
      278 |     const pdfPath = path.join(__dirname, '../__tests__/fixtures/test-document.pdf');
    > 279 |     await fileInput.setInputFiles(pdfPath);
          |     ^
      280 |
      281 |     // Should show error
      282 |     await expect(page.locator('[data-testid="error-message"]')).toBeVisible();
        at /Users/ltw/Documents/GitHub/writersroom/frontend/e2e/upload-workflow.spec.ts:279:5

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ../test-results/upload-workflow-Upload-Err-5ebaa-should-reject-non-FDX-files-chromium/test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ../test-results/upload-workflow-Upload-Err-5ebaa-should-reject-non-FDX-files-chromium/error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|upload-workflow-Upload-Err-5ebaa-should-reject-non-FDX-files-chromium/test-failed-1.png]]

[[ATTACHMENT|upload-workflow-Upload-Err-5ebaa-should-reject-non-FDX-files-chromium/error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Upload Error Handling › should handle empty FDX files gracefully" classname="upload-workflow.spec.ts" time="0.631">
<failure message="upload-workflow.spec.ts:286:7 should handle empty FDX files gracefully" type="FAILURE">
<![CDATA[  [chromium] › upload-workflow.spec.ts:286:7 › Upload Error Handling › should handle empty FDX files gracefully 

    Error: ENOENT: no such file or directory, stat '/Users/ltw/Documents/GitHub/writersroom/frontend/__tests__/fixtures/fdx/edge-cases/empty.fdx'

      289 |     // Upload empty FDX
      290 |     const emptyFDXPath = path.join(__dirname, '../__tests__/fixtures/fdx/edge-cases/empty.fdx');
    > 291 |     await fileInput.setInputFiles(emptyFDXPath);
          |     ^
      292 |
      293 |     // Should either show warning or load empty editor
      294 |     const warning = page.locator('[data-testid="empty-file-warning"]');
        at /Users/ltw/Documents/GitHub/writersroom/frontend/e2e/upload-workflow.spec.ts:291:5

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ../test-results/upload-workflow-Upload-Err-b6b0d--empty-FDX-files-gracefully-chromium/test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ../test-results/upload-workflow-Upload-Err-b6b0d--empty-FDX-files-gracefully-chromium/error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|upload-workflow-Upload-Err-b6b0d--empty-FDX-files-gracefully-chromium/test-failed-1.png]]

[[ATTACHMENT|upload-workflow-Upload-Err-b6b0d--empty-FDX-files-gracefully-chromium/error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Upload Error Handling › should handle malformed FDX XML" classname="upload-workflow.spec.ts" time="0.707">
<failure message="upload-workflow.spec.ts:300:7 should handle malformed FDX XML" type="FAILURE">
<![CDATA[  [chromium] › upload-workflow.spec.ts:300:7 › Upload Error Handling › should handle malformed FDX XML 

    Error: ENOENT: no such file or directory, stat '/Users/ltw/Documents/GitHub/writersroom/frontend/__tests__/fixtures/fdx/edge-cases/malformed.fdx'

      303 |     // Upload malformed FDX
      304 |     const malformedPath = path.join(__dirname, '../__tests__/fixtures/fdx/edge-cases/malformed.fdx');
    > 305 |     await fileInput.setInputFiles(malformedPath);
          |     ^
      306 |
      307 |     // Should show parsing error
      308 |     await expect(page.locator('[data-testid="error-message"]')).toBeVisible();
        at /Users/ltw/Documents/GitHub/writersroom/frontend/e2e/upload-workflow.spec.ts:305:5

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ../test-results/upload-workflow-Upload-Err-7139f-ld-handle-malformed-FDX-XML-chromium/test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ../test-results/upload-workflow-Upload-Err-7139f-ld-handle-malformed-FDX-XML-chromium/error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|upload-workflow-Upload-Err-7139f-ld-handle-malformed-FDX-XML-chromium/test-failed-1.png]]

[[ATTACHMENT|upload-workflow-Upload-Err-7139f-ld-handle-malformed-FDX-XML-chromium/error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Upload Error Handling › should provide retry option on upload failure" classname="upload-workflow.spec.ts" time="0.635">
<failure message="upload-workflow.spec.ts:312:7 should provide retry option on upload failure" type="FAILURE">
<![CDATA[  [chromium] › upload-workflow.spec.ts:312:7 › Upload Error Handling › should provide retry option on upload failure 

    Error: ENOENT: no such file or directory, stat '/Users/ltw/Documents/GitHub/writersroom/frontend/__tests__/fixtures/fdx/valid/standard-screenplay.fdx'

      318 |     const fileInput = page.locator('input[type="file"]');
      319 |     const testFilePath = path.join(__dirname, '../__tests__/fixtures/fdx/valid/standard-screenplay.fdx');
    > 320 |     await fileInput.setInputFiles(testFilePath);
          |     ^
      321 |
      322 |     // Should show error with retry button
      323 |     await expect(page.locator('[data-testid="error-message"]')).toBeVisible();
        at /Users/ltw/Documents/GitHub/writersroom/frontend/e2e/upload-workflow.spec.ts:320:5

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ../test-results/upload-workflow-Upload-Err-41bb2-ry-option-on-upload-failure-chromium/test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ../test-results/upload-workflow-Upload-Err-41bb2-ry-option-on-upload-failure-chromium/error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|upload-workflow-Upload-Err-41bb2-ry-option-on-upload-failure-chromium/test-failed-1.png]]

[[ATTACHMENT|upload-workflow-Upload-Err-41bb2-ry-option-on-upload-failure-chromium/error-context.md]]
]]>
</system-out>
</testcase>
</testsuite>
<testsuite name="upload-workflow.spec.ts" timestamp="2025-09-22T21:33:59.886Z" hostname="firefox" tests="13" failures="13" skipped="0" time="0.029" errors="0">
<testcase name="FDX Upload Workflow › should upload and parse a valid FDX file" classname="upload-workflow.spec.ts" time="0.003">
<failure message="upload-workflow.spec.ts:23:7 should upload and parse a valid FDX file" type="FAILURE">
<![CDATA[  [firefox] › upload-workflow.spec.ts:23:7 › FDX Upload Workflow › should upload and parse a valid FDX file 

    Error: browserType.launch: Executable doesn't exist at /Users/ltw/Library/Caches/ms-playwright/firefox-1490/firefox/Nightly.app/Contents/MacOS/firefox
    ╔═════════════════════════════════════════════════════════════════════════╗
    ║ Looks like Playwright Test or Playwright was just installed or updated. ║
    ║ Please run the following command to download new browsers:              ║
    ║                                                                         ║
    ║     npx playwright install                                              ║
    ║                                                                         ║
    ║ <3 Playwright Team                                                      ║
    ╚═════════════════════════════════════════════════════════════════════════╝

    TypeError: Cannot read properties of undefined (reading 'close')

      18 |
      19 |   test.afterEach(async () => {
    > 20 |     await page.close();
         |                ^
      21 |   });
      22 |
      23 |   test('should upload and parse a valid FDX file', async () => {
        at /Users/ltw/Documents/GitHub/writersroom/frontend/e2e/upload-workflow.spec.ts:20:16
]]>
</failure>
</testcase>
<testcase name="FDX Upload Workflow › should display error for invalid FDX file" classname="upload-workflow.spec.ts" time="0.002">
<failure message="upload-workflow.spec.ts:51:7 should display error for invalid FDX file" type="FAILURE">
<![CDATA[  [firefox] › upload-workflow.spec.ts:51:7 › FDX Upload Workflow › should display error for invalid FDX file 

    Error: browserType.launch: Executable doesn't exist at /Users/ltw/Library/Caches/ms-playwright/firefox-1490/firefox/Nightly.app/Contents/MacOS/firefox
    ╔═════════════════════════════════════════════════════════════════════════╗
    ║ Looks like Playwright Test or Playwright was just installed or updated. ║
    ║ Please run the following command to download new browsers:              ║
    ║                                                                         ║
    ║     npx playwright install                                              ║
    ║                                                                         ║
    ║ <3 Playwright Team                                                      ║
    ╚═════════════════════════════════════════════════════════════════════════╝

    TypeError: Cannot read properties of undefined (reading 'close')

      18 |
      19 |   test.afterEach(async () => {
    > 20 |     await page.close();
         |                ^
      21 |   });
      22 |
      23 |   test('should upload and parse a valid FDX file', async () => {
        at /Users/ltw/Documents/GitHub/writersroom/frontend/e2e/upload-workflow.spec.ts:20:16
]]>
</failure>
</testcase>
<testcase name="FDX Upload Workflow › should preserve scene order from FDX file" classname="upload-workflow.spec.ts" time="0.002">
<failure message="upload-workflow.spec.ts:64:7 should preserve scene order from FDX file" type="FAILURE">
<![CDATA[  [firefox] › upload-workflow.spec.ts:64:7 › FDX Upload Workflow › should preserve scene order from FDX file 

    Error: browserType.launch: Executable doesn't exist at /Users/ltw/Library/Caches/ms-playwright/firefox-1490/firefox/Nightly.app/Contents/MacOS/firefox
    ╔═════════════════════════════════════════════════════════════════════════╗
    ║ Looks like Playwright Test or Playwright was just installed or updated. ║
    ║ Please run the following command to download new browsers:              ║
    ║                                                                         ║
    ║     npx playwright install                                              ║
    ║                                                                         ║
    ║ <3 Playwright Team                                                      ║
    ╚═════════════════════════════════════════════════════════════════════════╝

    TypeError: Cannot read properties of undefined (reading 'close')

      18 |
      19 |   test.afterEach(async () => {
    > 20 |     await page.close();
         |                ^
      21 |   });
      22 |
      23 |   test('should upload and parse a valid FDX file', async () => {
        at /Users/ltw/Documents/GitHub/writersroom/frontend/e2e/upload-workflow.spec.ts:20:16
]]>
</failure>
</testcase>
<testcase name="FDX Upload Workflow › should handle large FDX files" classname="upload-workflow.spec.ts" time="0.003">
<failure message="upload-workflow.spec.ts:88:7 should handle large FDX files" type="FAILURE">
<![CDATA[  [firefox] › upload-workflow.spec.ts:88:7 › FDX Upload Workflow › should handle large FDX files ───

    Error: browserType.launch: Executable doesn't exist at /Users/ltw/Library/Caches/ms-playwright/firefox-1490/firefox/Nightly.app/Contents/MacOS/firefox
    ╔═════════════════════════════════════════════════════════════════════════╗
    ║ Looks like Playwright Test or Playwright was just installed or updated. ║
    ║ Please run the following command to download new browsers:              ║
    ║                                                                         ║
    ║     npx playwright install                                              ║
    ║                                                                         ║
    ║ <3 Playwright Team                                                      ║
    ╚═════════════════════════════════════════════════════════════════════════╝

    TypeError: Cannot read properties of undefined (reading 'close')

      18 |
      19 |   test.afterEach(async () => {
    > 20 |     await page.close();
         |                ^
      21 |   });
      22 |
      23 |   test('should upload and parse a valid FDX file', async () => {
        at /Users/ltw/Documents/GitHub/writersroom/frontend/e2e/upload-workflow.spec.ts:20:16
]]>
</failure>
</testcase>
<testcase name="FDX Upload Workflow › should support drag and drop upload" classname="upload-workflow.spec.ts" time="0.002">
<failure message="upload-workflow.spec.ts:113:7 should support drag and drop upload" type="FAILURE">
<![CDATA[  [firefox] › upload-workflow.spec.ts:113:7 › FDX Upload Workflow › should support drag and drop upload 

    Error: browserType.launch: Executable doesn't exist at /Users/ltw/Library/Caches/ms-playwright/firefox-1490/firefox/Nightly.app/Contents/MacOS/firefox
    ╔═════════════════════════════════════════════════════════════════════════╗
    ║ Looks like Playwright Test or Playwright was just installed or updated. ║
    ║ Please run the following command to download new browsers:              ║
    ║                                                                         ║
    ║     npx playwright install                                              ║
    ║                                                                         ║
    ║ <3 Playwright Team                                                      ║
    ╚═════════════════════════════════════════════════════════════════════════╝

    TypeError: Cannot read properties of undefined (reading 'close')

      18 |
      19 |   test.afterEach(async () => {
    > 20 |     await page.close();
         |                ^
      21 |   });
      22 |
      23 |   test('should upload and parse a valid FDX file', async () => {
        at /Users/ltw/Documents/GitHub/writersroom/frontend/e2e/upload-workflow.spec.ts:20:16
]]>
</failure>
</testcase>
<testcase name="FDX Upload Workflow › should maintain editor state after page refresh" classname="upload-workflow.spec.ts" time="0.002">
<failure message="upload-workflow.spec.ts:153:7 should maintain editor state after page refresh" type="FAILURE">
<![CDATA[  [firefox] › upload-workflow.spec.ts:153:7 › FDX Upload Workflow › should maintain editor state after page refresh 

    Error: browserType.launch: Executable doesn't exist at /Users/ltw/Library/Caches/ms-playwright/firefox-1490/firefox/Nightly.app/Contents/MacOS/firefox
    ╔═════════════════════════════════════════════════════════════════════════╗
    ║ Looks like Playwright Test or Playwright was just installed or updated. ║
    ║ Please run the following command to download new browsers:              ║
    ║                                                                         ║
    ║     npx playwright install                                              ║
    ║                                                                         ║
    ║ <3 Playwright Team                                                      ║
    ╚═════════════════════════════════════════════════════════════════════════╝

    TypeError: Cannot read properties of undefined (reading 'close')

      18 |
      19 |   test.afterEach(async () => {
    > 20 |     await page.close();
         |                ^
      21 |   });
      22 |
      23 |   test('should upload and parse a valid FDX file', async () => {
        at /Users/ltw/Documents/GitHub/writersroom/frontend/e2e/upload-workflow.spec.ts:20:16
]]>
</failure>
</testcase>
<testcase name="FDX Upload Workflow › should navigate between scenes via sidebar" classname="upload-workflow.spec.ts" time="0.002">
<failure message="upload-workflow.spec.ts:187:7 should navigate between scenes via sidebar" type="FAILURE">
<![CDATA[  [firefox] › upload-workflow.spec.ts:187:7 › FDX Upload Workflow › should navigate between scenes via sidebar 

    Error: browserType.launch: Executable doesn't exist at /Users/ltw/Library/Caches/ms-playwright/firefox-1490/firefox/Nightly.app/Contents/MacOS/firefox
    ╔═════════════════════════════════════════════════════════════════════════╗
    ║ Looks like Playwright Test or Playwright was just installed or updated. ║
    ║ Please run the following command to download new browsers:              ║
    ║                                                                         ║
    ║     npx playwright install                                              ║
    ║                                                                         ║
    ║ <3 Playwright Team                                                      ║
    ╚═════════════════════════════════════════════════════════════════════════╝

    TypeError: Cannot read properties of undefined (reading 'close')

      18 |
      19 |   test.afterEach(async () => {
    > 20 |     await page.close();
         |                ^
      21 |   });
      22 |
      23 |   test('should upload and parse a valid FDX file', async () => {
        at /Users/ltw/Documents/GitHub/writersroom/frontend/e2e/upload-workflow.spec.ts:20:16
]]>
</failure>
</testcase>
<testcase name="FDX Upload Workflow › should show scene summaries in sidebar" classname="upload-workflow.spec.ts" time="0.002">
<failure message="upload-workflow.spec.ts:210:7 should show scene summaries in sidebar" type="FAILURE">
<![CDATA[  [firefox] › upload-workflow.spec.ts:210:7 › FDX Upload Workflow › should show scene summaries in sidebar 

    Error: browserType.launch: Executable doesn't exist at /Users/ltw/Library/Caches/ms-playwright/firefox-1490/firefox/Nightly.app/Contents/MacOS/firefox
    ╔═════════════════════════════════════════════════════════════════════════╗
    ║ Looks like Playwright Test or Playwright was just installed or updated. ║
    ║ Please run the following command to download new browsers:              ║
    ║                                                                         ║
    ║     npx playwright install                                              ║
    ║                                                                         ║
    ║ <3 Playwright Team                                                      ║
    ╚═════════════════════════════════════════════════════════════════════════╝

    TypeError: Cannot read properties of undefined (reading 'close')

      18 |
      19 |   test.afterEach(async () => {
    > 20 |     await page.close();
         |                ^
      21 |   });
      22 |
      23 |   test('should upload and parse a valid FDX file', async () => {
        at /Users/ltw/Documents/GitHub/writersroom/frontend/e2e/upload-workflow.spec.ts:20:16
]]>
</failure>
</testcase>
<testcase name="FDX Upload Workflow › should display scene metadata correctly" classname="upload-workflow.spec.ts" time="0.002">
<failure message="upload-workflow.spec.ts:233:7 should display scene metadata correctly" type="FAILURE">
<![CDATA[  [firefox] › upload-workflow.spec.ts:233:7 › FDX Upload Workflow › should display scene metadata correctly 

    Error: browserType.launch: Executable doesn't exist at /Users/ltw/Library/Caches/ms-playwright/firefox-1490/firefox/Nightly.app/Contents/MacOS/firefox
    ╔═════════════════════════════════════════════════════════════════════════╗
    ║ Looks like Playwright Test or Playwright was just installed or updated. ║
    ║ Please run the following command to download new browsers:              ║
    ║                                                                         ║
    ║     npx playwright install                                              ║
    ║                                                                         ║
    ║ <3 Playwright Team                                                      ║
    ╚═════════════════════════════════════════════════════════════════════════╝

    TypeError: Cannot read properties of undefined (reading 'close')

      18 |
      19 |   test.afterEach(async () => {
    > 20 |     await page.close();
         |                ^
      21 |   });
      22 |
      23 |   test('should upload and parse a valid FDX file', async () => {
        at /Users/ltw/Documents/GitHub/writersroom/frontend/e2e/upload-workflow.spec.ts:20:16
]]>
</failure>
</testcase>
<testcase name="Upload Error Handling › should reject non-FDX files" classname="upload-workflow.spec.ts" time="0.002">
<failure message="upload-workflow.spec.ts:274:7 should reject non-FDX files" type="FAILURE">
<![CDATA[  [firefox] › upload-workflow.spec.ts:274:7 › Upload Error Handling › should reject non-FDX files ──

    Error: browserType.launch: Executable doesn't exist at /Users/ltw/Library/Caches/ms-playwright/firefox-1490/firefox/Nightly.app/Contents/MacOS/firefox
    ╔═════════════════════════════════════════════════════════════════════════╗
    ║ Looks like Playwright Test or Playwright was just installed or updated. ║
    ║ Please run the following command to download new browsers:              ║
    ║                                                                         ║
    ║     npx playwright install                                              ║
    ║                                                                         ║
    ║ <3 Playwright Team                                                      ║
    ╚═════════════════════════════════════════════════════════════════════════╝

    TypeError: Cannot read properties of undefined (reading 'close')

      269 |
      270 |   test.afterEach(async () => {
    > 271 |     await page.close();
          |                ^
      272 |   });
      273 |
      274 |   test('should reject non-FDX files', async () => {
        at /Users/ltw/Documents/GitHub/writersroom/frontend/e2e/upload-workflow.spec.ts:271:16
]]>
</failure>
</testcase>
<testcase name="Upload Error Handling › should handle empty FDX files gracefully" classname="upload-workflow.spec.ts" time="0.002">
<failure message="upload-workflow.spec.ts:286:7 should handle empty FDX files gracefully" type="FAILURE">
<![CDATA[  [firefox] › upload-workflow.spec.ts:286:7 › Upload Error Handling › should handle empty FDX files gracefully 

    Error: browserType.launch: Executable doesn't exist at /Users/ltw/Library/Caches/ms-playwright/firefox-1490/firefox/Nightly.app/Contents/MacOS/firefox
    ╔═════════════════════════════════════════════════════════════════════════╗
    ║ Looks like Playwright Test or Playwright was just installed or updated. ║
    ║ Please run the following command to download new browsers:              ║
    ║                                                                         ║
    ║     npx playwright install                                              ║
    ║                                                                         ║
    ║ <3 Playwright Team                                                      ║
    ╚═════════════════════════════════════════════════════════════════════════╝

    TypeError: Cannot read properties of undefined (reading 'close')

      269 |
      270 |   test.afterEach(async () => {
    > 271 |     await page.close();
          |                ^
      272 |   });
      273 |
      274 |   test('should reject non-FDX files', async () => {
        at /Users/ltw/Documents/GitHub/writersroom/frontend/e2e/upload-workflow.spec.ts:271:16
]]>
</failure>
</testcase>
<testcase name="Upload Error Handling › should handle malformed FDX XML" classname="upload-workflow.spec.ts" time="0.003">
<failure message="upload-workflow.spec.ts:300:7 should handle malformed FDX XML" type="FAILURE">
<![CDATA[  [firefox] › upload-workflow.spec.ts:300:7 › Upload Error Handling › should handle malformed FDX XML 

    Error: browserType.launch: Executable doesn't exist at /Users/ltw/Library/Caches/ms-playwright/firefox-1490/firefox/Nightly.app/Contents/MacOS/firefox
    ╔═════════════════════════════════════════════════════════════════════════╗
    ║ Looks like Playwright Test or Playwright was just installed or updated. ║
    ║ Please run the following command to download new browsers:              ║
    ║                                                                         ║
    ║     npx playwright install                                              ║
    ║                                                                         ║
    ║ <3 Playwright Team                                                      ║
    ╚═════════════════════════════════════════════════════════════════════════╝

    TypeError: Cannot read properties of undefined (reading 'close')

      269 |
      270 |   test.afterEach(async () => {
    > 271 |     await page.close();
          |                ^
      272 |   });
      273 |
      274 |   test('should reject non-FDX files', async () => {
        at /Users/ltw/Documents/GitHub/writersroom/frontend/e2e/upload-workflow.spec.ts:271:16
]]>
</failure>
</testcase>
<testcase name="Upload Error Handling › should provide retry option on upload failure" classname="upload-workflow.spec.ts" time="0.002">
<failure message="upload-workflow.spec.ts:312:7 should provide retry option on upload failure" type="FAILURE">
<![CDATA[  [firefox] › upload-workflow.spec.ts:312:7 › Upload Error Handling › should provide retry option on upload failure 

    Error: browserType.launch: Executable doesn't exist at /Users/ltw/Library/Caches/ms-playwright/firefox-1490/firefox/Nightly.app/Contents/MacOS/firefox
    ╔═════════════════════════════════════════════════════════════════════════╗
    ║ Looks like Playwright Test or Playwright was just installed or updated. ║
    ║ Please run the following command to download new browsers:              ║
    ║                                                                         ║
    ║     npx playwright install                                              ║
    ║                                                                         ║
    ║ <3 Playwright Team                                                      ║
    ╚═════════════════════════════════════════════════════════════════════════╝

    TypeError: Cannot read properties of undefined (reading 'close')

      269 |
      270 |   test.afterEach(async () => {
    > 271 |     await page.close();
          |                ^
      272 |   });
      273 |
      274 |   test('should reject non-FDX files', async () => {
        at /Users/ltw/Documents/GitHub/writersroom/frontend/e2e/upload-workflow.spec.ts:271:16
]]>
</failure>
</testcase>
</testsuite>
<testsuite name="upload-workflow.spec.ts" timestamp="2025-09-22T21:33:59.886Z" hostname="webkit" tests="13" failures="13" skipped="0" time="0.034" errors="0">
<testcase name="FDX Upload Workflow › should upload and parse a valid FDX file" classname="upload-workflow.spec.ts" time="0.002">
<failure message="upload-workflow.spec.ts:23:7 should upload and parse a valid FDX file" type="FAILURE">
<![CDATA[  [webkit] › upload-workflow.spec.ts:23:7 › FDX Upload Workflow › should upload and parse a valid FDX file 

    Error: browserType.launch: Executable doesn't exist at /Users/ltw/Library/Caches/ms-playwright/webkit-2203/pw_run.sh
    ╔═════════════════════════════════════════════════════════════════════════╗
    ║ Looks like Playwright Test or Playwright was just installed or updated. ║
    ║ Please run the following command to download new browsers:              ║
    ║                                                                         ║
    ║     npx playwright install                                              ║
    ║                                                                         ║
    ║ <3 Playwright Team                                                      ║
    ╚═════════════════════════════════════════════════════════════════════════╝

    TypeError: Cannot read properties of undefined (reading 'close')

      18 |
      19 |   test.afterEach(async () => {
    > 20 |     await page.close();
         |                ^
      21 |   });
      22 |
      23 |   test('should upload and parse a valid FDX file', async () => {
        at /Users/ltw/Documents/GitHub/writersroom/frontend/e2e/upload-workflow.spec.ts:20:16
]]>
</failure>
</testcase>
<testcase name="FDX Upload Workflow › should display error for invalid FDX file" classname="upload-workflow.spec.ts" time="0.004">
<failure message="upload-workflow.spec.ts:51:7 should display error for invalid FDX file" type="FAILURE">
<![CDATA[  [webkit] › upload-workflow.spec.ts:51:7 › FDX Upload Workflow › should display error for invalid FDX file 

    Error: browserType.launch: Executable doesn't exist at /Users/ltw/Library/Caches/ms-playwright/webkit-2203/pw_run.sh
    ╔═════════════════════════════════════════════════════════════════════════╗
    ║ Looks like Playwright Test or Playwright was just installed or updated. ║
    ║ Please run the following command to download new browsers:              ║
    ║                                                                         ║
    ║     npx playwright install                                              ║
    ║                                                                         ║
    ║ <3 Playwright Team                                                      ║
    ╚═════════════════════════════════════════════════════════════════════════╝

    TypeError: Cannot read properties of undefined (reading 'close')

      18 |
      19 |   test.afterEach(async () => {
    > 20 |     await page.close();
         |                ^
      21 |   });
      22 |
      23 |   test('should upload and parse a valid FDX file', async () => {
        at /Users/ltw/Documents/GitHub/writersroom/frontend/e2e/upload-workflow.spec.ts:20:16
]]>
</failure>
</testcase>
<testcase name="FDX Upload Workflow › should preserve scene order from FDX file" classname="upload-workflow.spec.ts" time="0.003">
<failure message="upload-workflow.spec.ts:64:7 should preserve scene order from FDX file" type="FAILURE">
<![CDATA[  [webkit] › upload-workflow.spec.ts:64:7 › FDX Upload Workflow › should preserve scene order from FDX file 

    Error: browserType.launch: Executable doesn't exist at /Users/ltw/Library/Caches/ms-playwright/webkit-2203/pw_run.sh
    ╔═════════════════════════════════════════════════════════════════════════╗
    ║ Looks like Playwright Test or Playwright was just installed or updated. ║
    ║ Please run the following command to download new browsers:              ║
    ║                                                                         ║
    ║     npx playwright install                                              ║
    ║                                                                         ║
    ║ <3 Playwright Team                                                      ║
    ╚═════════════════════════════════════════════════════════════════════════╝

    TypeError: Cannot read properties of undefined (reading 'close')

      18 |
      19 |   test.afterEach(async () => {
    > 20 |     await page.close();
         |                ^
      21 |   });
      22 |
      23 |   test('should upload and parse a valid FDX file', async () => {
        at /Users/ltw/Documents/GitHub/writersroom/frontend/e2e/upload-workflow.spec.ts:20:16
]]>
</failure>
</testcase>
<testcase name="FDX Upload Workflow › should handle large FDX files" classname="upload-workflow.spec.ts" time="0.003">
<failure message="upload-workflow.spec.ts:88:7 should handle large FDX files" type="FAILURE">
<![CDATA[  [webkit] › upload-workflow.spec.ts:88:7 › FDX Upload Workflow › should handle large FDX files ────

    Error: browserType.launch: Executable doesn't exist at /Users/ltw/Library/Caches/ms-playwright/webkit-2203/pw_run.sh
    ╔═════════════════════════════════════════════════════════════════════════╗
    ║ Looks like Playwright Test or Playwright was just installed or updated. ║
    ║ Please run the following command to download new browsers:              ║
    ║                                                                         ║
    ║     npx playwright install                                              ║
    ║                                                                         ║
    ║ <3 Playwright Team                                                      ║
    ╚═════════════════════════════════════════════════════════════════════════╝

    TypeError: Cannot read properties of undefined (reading 'close')

      18 |
      19 |   test.afterEach(async () => {
    > 20 |     await page.close();
         |                ^
      21 |   });
      22 |
      23 |   test('should upload and parse a valid FDX file', async () => {
        at /Users/ltw/Documents/GitHub/writersroom/frontend/e2e/upload-workflow.spec.ts:20:16
]]>
</failure>
</testcase>
<testcase name="FDX Upload Workflow › should support drag and drop upload" classname="upload-workflow.spec.ts" time="0.003">
<failure message="upload-workflow.spec.ts:113:7 should support drag and drop upload" type="FAILURE">
<![CDATA[  [webkit] › upload-workflow.spec.ts:113:7 › FDX Upload Workflow › should support drag and drop upload 

    Error: browserType.launch: Executable doesn't exist at /Users/ltw/Library/Caches/ms-playwright/webkit-2203/pw_run.sh
    ╔═════════════════════════════════════════════════════════════════════════╗
    ║ Looks like Playwright Test or Playwright was just installed or updated. ║
    ║ Please run the following command to download new browsers:              ║
    ║                                                                         ║
    ║     npx playwright install                                              ║
    ║                                                                         ║
    ║ <3 Playwright Team                                                      ║
    ╚═════════════════════════════════════════════════════════════════════════╝

    TypeError: Cannot read properties of undefined (reading 'close')

      18 |
      19 |   test.afterEach(async () => {
    > 20 |     await page.close();
         |                ^
      21 |   });
      22 |
      23 |   test('should upload and parse a valid FDX file', async () => {
        at /Users/ltw/Documents/GitHub/writersroom/frontend/e2e/upload-workflow.spec.ts:20:16
]]>
</failure>
</testcase>
<testcase name="FDX Upload Workflow › should maintain editor state after page refresh" classname="upload-workflow.spec.ts" time="0.002">
<failure message="upload-workflow.spec.ts:153:7 should maintain editor state after page refresh" type="FAILURE">
<![CDATA[  [webkit] › upload-workflow.spec.ts:153:7 › FDX Upload Workflow › should maintain editor state after page refresh 

    Error: browserType.launch: Executable doesn't exist at /Users/ltw/Library/Caches/ms-playwright/webkit-2203/pw_run.sh
    ╔═════════════════════════════════════════════════════════════════════════╗
    ║ Looks like Playwright Test or Playwright was just installed or updated. ║
    ║ Please run the following command to download new browsers:              ║
    ║                                                                         ║
    ║     npx playwright install                                              ║
    ║                                                                         ║
    ║ <3 Playwright Team                                                      ║
    ╚═════════════════════════════════════════════════════════════════════════╝

    TypeError: Cannot read properties of undefined (reading 'close')

      18 |
      19 |   test.afterEach(async () => {
    > 20 |     await page.close();
         |                ^
      21 |   });
      22 |
      23 |   test('should upload and parse a valid FDX file', async () => {
        at /Users/ltw/Documents/GitHub/writersroom/frontend/e2e/upload-workflow.spec.ts:20:16
]]>
</failure>
</testcase>
<testcase name="FDX Upload Workflow › should navigate between scenes via sidebar" classname="upload-workflow.spec.ts" time="0.003">
<failure message="upload-workflow.spec.ts:187:7 should navigate between scenes via sidebar" type="FAILURE">
<![CDATA[  [webkit] › upload-workflow.spec.ts:187:7 › FDX Upload Workflow › should navigate between scenes via sidebar 

    Error: browserType.launch: Executable doesn't exist at /Users/ltw/Library/Caches/ms-playwright/webkit-2203/pw_run.sh
    ╔═════════════════════════════════════════════════════════════════════════╗
    ║ Looks like Playwright Test or Playwright was just installed or updated. ║
    ║ Please run the following command to download new browsers:              ║
    ║                                                                         ║
    ║     npx playwright install                                              ║
    ║                                                                         ║
    ║ <3 Playwright Team                                                      ║
    ╚═════════════════════════════════════════════════════════════════════════╝

    TypeError: Cannot read properties of undefined (reading 'close')

      18 |
      19 |   test.afterEach(async () => {
    > 20 |     await page.close();
         |                ^
      21 |   });
      22 |
      23 |   test('should upload and parse a valid FDX file', async () => {
        at /Users/ltw/Documents/GitHub/writersroom/frontend/e2e/upload-workflow.spec.ts:20:16
]]>
</failure>
</testcase>
<testcase name="FDX Upload Workflow › should show scene summaries in sidebar" classname="upload-workflow.spec.ts" time="0.004">
<failure message="upload-workflow.spec.ts:210:7 should show scene summaries in sidebar" type="FAILURE">
<![CDATA[  [webkit] › upload-workflow.spec.ts:210:7 › FDX Upload Workflow › should show scene summaries in sidebar 

    Error: browserType.launch: Executable doesn't exist at /Users/ltw/Library/Caches/ms-playwright/webkit-2203/pw_run.sh
    ╔═════════════════════════════════════════════════════════════════════════╗
    ║ Looks like Playwright Test or Playwright was just installed or updated. ║
    ║ Please run the following command to download new browsers:              ║
    ║                                                                         ║
    ║     npx playwright install                                              ║
    ║                                                                         ║
    ║ <3 Playwright Team                                                      ║
    ╚═════════════════════════════════════════════════════════════════════════╝

    TypeError: Cannot read properties of undefined (reading 'close')

      18 |
      19 |   test.afterEach(async () => {
    > 20 |     await page.close();
         |                ^
      21 |   });
      22 |
      23 |   test('should upload and parse a valid FDX file', async () => {
        at /Users/ltw/Documents/GitHub/writersroom/frontend/e2e/upload-workflow.spec.ts:20:16
]]>
</failure>
</testcase>
<testcase name="FDX Upload Workflow › should display scene metadata correctly" classname="upload-workflow.spec.ts" time="0.002">
<failure message="upload-workflow.spec.ts:233:7 should display scene metadata correctly" type="FAILURE">
<![CDATA[  [webkit] › upload-workflow.spec.ts:233:7 › FDX Upload Workflow › should display scene metadata correctly 

    Error: browserType.launch: Executable doesn't exist at /Users/ltw/Library/Caches/ms-playwright/webkit-2203/pw_run.sh
    ╔═════════════════════════════════════════════════════════════════════════╗
    ║ Looks like Playwright Test or Playwright was just installed or updated. ║
    ║ Please run the following command to download new browsers:              ║
    ║                                                                         ║
    ║     npx playwright install                                              ║
    ║                                                                         ║
    ║ <3 Playwright Team                                                      ║
    ╚═════════════════════════════════════════════════════════════════════════╝

    TypeError: Cannot read properties of undefined (reading 'close')

      18 |
      19 |   test.afterEach(async () => {
    > 20 |     await page.close();
         |                ^
      21 |   });
      22 |
      23 |   test('should upload and parse a valid FDX file', async () => {
        at /Users/ltw/Documents/GitHub/writersroom/frontend/e2e/upload-workflow.spec.ts:20:16
]]>
</failure>
</testcase>
<testcase name="Upload Error Handling › should reject non-FDX files" classname="upload-workflow.spec.ts" time="0.002">
<failure message="upload-workflow.spec.ts:274:7 should reject non-FDX files" type="FAILURE">
<![CDATA[  [webkit] › upload-workflow.spec.ts:274:7 › Upload Error Handling › should reject non-FDX files ───

    Error: browserType.launch: Executable doesn't exist at /Users/ltw/Library/Caches/ms-playwright/webkit-2203/pw_run.sh
    ╔═════════════════════════════════════════════════════════════════════════╗
    ║ Looks like Playwright Test or Playwright was just installed or updated. ║
    ║ Please run the following command to download new browsers:              ║
    ║                                                                         ║
    ║     npx playwright install                                              ║
    ║                                                                         ║
    ║ <3 Playwright Team                                                      ║
    ╚═════════════════════════════════════════════════════════════════════════╝

    TypeError: Cannot read properties of undefined (reading 'close')

      269 |
      270 |   test.afterEach(async () => {
    > 271 |     await page.close();
          |                ^
      272 |   });
      273 |
      274 |   test('should reject non-FDX files', async () => {
        at /Users/ltw/Documents/GitHub/writersroom/frontend/e2e/upload-workflow.spec.ts:271:16
]]>
</failure>
</testcase>
<testcase name="Upload Error Handling › should handle empty FDX files gracefully" classname="upload-workflow.spec.ts" time="0.002">
<failure message="upload-workflow.spec.ts:286:7 should handle empty FDX files gracefully" type="FAILURE">
<![CDATA[  [webkit] › upload-workflow.spec.ts:286:7 › Upload Error Handling › should handle empty FDX files gracefully 

    Error: browserType.launch: Executable doesn't exist at /Users/ltw/Library/Caches/ms-playwright/webkit-2203/pw_run.sh
    ╔═════════════════════════════════════════════════════════════════════════╗
    ║ Looks like Playwright Test or Playwright was just installed or updated. ║
    ║ Please run the following command to download new browsers:              ║
    ║                                                                         ║
    ║     npx playwright install                                              ║
    ║                                                                         ║
    ║ <3 Playwright Team                                                      ║
    ╚═════════════════════════════════════════════════════════════════════════╝

    TypeError: Cannot read properties of undefined (reading 'close')

      269 |
      270 |   test.afterEach(async () => {
    > 271 |     await page.close();
          |                ^
      272 |   });
      273 |
      274 |   test('should reject non-FDX files', async () => {
        at /Users/ltw/Documents/GitHub/writersroom/frontend/e2e/upload-workflow.spec.ts:271:16
]]>
</failure>
</testcase>
<testcase name="Upload Error Handling › should handle malformed FDX XML" classname="upload-workflow.spec.ts" time="0.002">
<failure message="upload-workflow.spec.ts:300:7 should handle malformed FDX XML" type="FAILURE">
<![CDATA[  [webkit] › upload-workflow.spec.ts:300:7 › Upload Error Handling › should handle malformed FDX XML 

    Error: browserType.launch: Executable doesn't exist at /Users/ltw/Library/Caches/ms-playwright/webkit-2203/pw_run.sh
    ╔═════════════════════════════════════════════════════════════════════════╗
    ║ Looks like Playwright Test or Playwright was just installed or updated. ║
    ║ Please run the following command to download new browsers:              ║
    ║                                                                         ║
    ║     npx playwright install                                              ║
    ║                                                                         ║
    ║ <3 Playwright Team                                                      ║
    ╚═════════════════════════════════════════════════════════════════════════╝

    TypeError: Cannot read properties of undefined (reading 'close')

      269 |
      270 |   test.afterEach(async () => {
    > 271 |     await page.close();
          |                ^
      272 |   });
      273 |
      274 |   test('should reject non-FDX files', async () => {
        at /Users/ltw/Documents/GitHub/writersroom/frontend/e2e/upload-workflow.spec.ts:271:16
]]>
</failure>
</testcase>
<testcase name="Upload Error Handling › should provide retry option on upload failure" classname="upload-workflow.spec.ts" time="0.002">
<failure message="upload-workflow.spec.ts:312:7 should provide retry option on upload failure" type="FAILURE">
<![CDATA[  [webkit] › upload-workflow.spec.ts:312:7 › Upload Error Handling › should provide retry option on upload failure 

    Error: browserType.launch: Executable doesn't exist at /Users/ltw/Library/Caches/ms-playwright/webkit-2203/pw_run.sh
    ╔═════════════════════════════════════════════════════════════════════════╗
    ║ Looks like Playwright Test or Playwright was just installed or updated. ║
    ║ Please run the following command to download new browsers:              ║
    ║                                                                         ║
    ║     npx playwright install                                              ║
    ║                                                                         ║
    ║ <3 Playwright Team                                                      ║
    ╚═════════════════════════════════════════════════════════════════════════╝

    TypeError: Cannot read properties of undefined (reading 'close')

      269 |
      270 |   test.afterEach(async () => {
    > 271 |     await page.close();
          |                ^
      272 |   });
      273 |
      274 |   test('should reject non-FDX files', async () => {
        at /Users/ltw/Documents/GitHub/writersroom/frontend/e2e/upload-workflow.spec.ts:271:16
]]>
</failure>
</testcase>
</testsuite>
<testsuite name="upload-workflow.spec.ts" timestamp="2025-09-22T21:33:59.886Z" hostname="Mobile Chrome" tests="13" failures="13" skipped="0" time="23.315" errors="0">
<testcase name="FDX Upload Workflow › should upload and parse a valid FDX file" classname="upload-workflow.spec.ts" time="6.532">
<failure message="upload-workflow.spec.ts:23:7 should upload and parse a valid FDX file" type="FAILURE">
<![CDATA[  [Mobile Chrome] › upload-workflow.spec.ts:23:7 › FDX Upload Workflow › should upload and parse a valid FDX file 

    Error: expect(locator).toBeVisible() failed

    Locator:  locator('[data-testid="upload-area"]')
    Expected: visible
    Received: <element(s) not found>
    Timeout:  5000ms

    Call log:
      - Expect "toBeVisible" with timeout 5000ms
      - waiting for locator('[data-testid="upload-area"]')


      26 |
      27 |     // Wait for the upload area to be visible
    > 28 |     await expect(page.locator('[data-testid="upload-area"]')).toBeVisible();
         |                                                               ^
      29 |
      30 |     // Upload a test FDX file
      31 |     const fileInput = page.locator('input[type="file"]');
        at /Users/ltw/Documents/GitHub/writersroom/frontend/e2e/upload-workflow.spec.ts:28:63

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ../test-results/upload-workflow-FDX-Upload-9bda4--and-parse-a-valid-FDX-file-Mobile-Chrome/test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ../test-results/upload-workflow-FDX-Upload-9bda4--and-parse-a-valid-FDX-file-Mobile-Chrome/error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|upload-workflow-FDX-Upload-9bda4--and-parse-a-valid-FDX-file-Mobile-Chrome/test-failed-1.png]]

[[ATTACHMENT|upload-workflow-FDX-Upload-9bda4--and-parse-a-valid-FDX-file-Mobile-Chrome/error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="FDX Upload Workflow › should display error for invalid FDX file" classname="upload-workflow.spec.ts" time="1.401">
<failure message="upload-workflow.spec.ts:51:7 should display error for invalid FDX file" type="FAILURE">
<![CDATA[  [Mobile Chrome] › upload-workflow.spec.ts:51:7 › FDX Upload Workflow › should display error for invalid FDX file 

    Error: ENOENT: no such file or directory, stat '/Users/ltw/Documents/GitHub/writersroom/frontend/__tests__/fixtures/invalid-file.txt'

      55 |     const fileInput = page.locator('input[type="file"]');
      56 |     const invalidFile = path.join(__dirname, '../__tests__/fixtures/invalid-file.txt');
    > 57 |     await fileInput.setInputFiles(invalidFile);
         |     ^
      58 |
      59 |     // Wait for and verify error message
      60 |     await expect(page.locator('[data-testid="error-message"]')).toBeVisible({ timeout: 5000 });
        at /Users/ltw/Documents/GitHub/writersroom/frontend/e2e/upload-workflow.spec.ts:57:5

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ../test-results/upload-workflow-FDX-Upload-98dc0--error-for-invalid-FDX-file-Mobile-Chrome/test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ../test-results/upload-workflow-FDX-Upload-98dc0--error-for-invalid-FDX-file-Mobile-Chrome/error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|upload-workflow-FDX-Upload-98dc0--error-for-invalid-FDX-file-Mobile-Chrome/test-failed-1.png]]

[[ATTACHMENT|upload-workflow-FDX-Upload-98dc0--error-for-invalid-FDX-file-Mobile-Chrome/error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="FDX Upload Workflow › should preserve scene order from FDX file" classname="upload-workflow.spec.ts" time="1.245">
<failure message="upload-workflow.spec.ts:64:7 should preserve scene order from FDX file" type="FAILURE">
<![CDATA[  [Mobile Chrome] › upload-workflow.spec.ts:64:7 › FDX Upload Workflow › should preserve scene order from FDX file 

    Error: ENOENT: no such file or directory, stat '/Users/ltw/Documents/GitHub/writersroom/frontend/__tests__/fixtures/fdx/valid/multiple-scenes.fdx'

      68 |     const fileInput = page.locator('input[type="file"]');
      69 |     const testFilePath = path.join(__dirname, '../__tests__/fixtures/fdx/valid/multiple-scenes.fdx');
    > 70 |     await fileInput.setInputFiles(testFilePath);
         |     ^
      71 |
      72 |     // Wait for parsing
      73 |     await expect(page.locator('[data-testid="loading-overlay"]')).toBeHidden({ timeout: 10000 });
        at /Users/ltw/Documents/GitHub/writersroom/frontend/e2e/upload-workflow.spec.ts:70:5

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ../test-results/upload-workflow-FDX-Upload-1ff41-e-scene-order-from-FDX-file-Mobile-Chrome/test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ../test-results/upload-workflow-FDX-Upload-1ff41-e-scene-order-from-FDX-file-Mobile-Chrome/error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|upload-workflow-FDX-Upload-1ff41-e-scene-order-from-FDX-file-Mobile-Chrome/test-failed-1.png]]

[[ATTACHMENT|upload-workflow-FDX-Upload-1ff41-e-scene-order-from-FDX-file-Mobile-Chrome/error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="FDX Upload Workflow › should handle large FDX files" classname="upload-workflow.spec.ts" time="1.224">
<properties>
<property name="slow" value="">
</property>
</properties>
<failure message="upload-workflow.spec.ts:88:7 should handle large FDX files" type="FAILURE">
<![CDATA[  [Mobile Chrome] › upload-workflow.spec.ts:88:7 › FDX Upload Workflow › should handle large FDX files 

    Error: ENOENT: no such file or directory, stat '/Users/ltw/Documents/GitHub/writersroom/frontend/__tests__/fixtures/fdx/large/feature-film.fdx'

      94 |     const fileInput = page.locator('input[type="file"]');
      95 |     const largeFilePath = path.join(__dirname, '../__tests__/fixtures/fdx/large/feature-film.fdx');
    > 96 |     await fileInput.setInputFiles(largeFilePath);
         |     ^
      97 |
      98 |     // Wait for parsing with extended timeout
      99 |     await expect(page.locator('[data-testid="loading-overlay"]')).toBeVisible();
        at /Users/ltw/Documents/GitHub/writersroom/frontend/e2e/upload-workflow.spec.ts:96:5

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ../test-results/upload-workflow-FDX-Upload-9adbb-ould-handle-large-FDX-files-Mobile-Chrome/test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ../test-results/upload-workflow-FDX-Upload-9adbb-ould-handle-large-FDX-files-Mobile-Chrome/error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|upload-workflow-FDX-Upload-9adbb-ould-handle-large-FDX-files-Mobile-Chrome/test-failed-1.png]]

[[ATTACHMENT|upload-workflow-FDX-Upload-9adbb-ould-handle-large-FDX-files-Mobile-Chrome/error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="FDX Upload Workflow › should support drag and drop upload" classname="upload-workflow.spec.ts" time="6.227">
<failure message="upload-workflow.spec.ts:113:7 should support drag and drop upload" type="FAILURE">
<![CDATA[  [Mobile Chrome] › upload-workflow.spec.ts:113:7 › FDX Upload Workflow › should support drag and drop upload 

    Error: expect(locator).toBeVisible() failed

    Locator:  locator('[data-testid="upload-area"]')
    Expected: visible
    Received: <element(s) not found>
    Timeout:  5000ms

    Call log:
      - Expect "toBeVisible" with timeout 5000ms
      - waiting for locator('[data-testid="upload-area"]')


      115 |
      116 |     const dropZone = page.locator('[data-testid="upload-area"]');
    > 117 |     await expect(dropZone).toBeVisible();
          |                            ^
      118 |
      119 |     // Create a DataTransfer to simulate drag and drop
      120 |     const testFilePath = path.join(__dirname, '../__tests__/fixtures/fdx/valid/standard-screenplay.fdx');
        at /Users/ltw/Documents/GitHub/writersroom/frontend/e2e/upload-workflow.spec.ts:117:28

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ../test-results/upload-workflow-FDX-Upload-94f38-upport-drag-and-drop-upload-Mobile-Chrome/test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ../test-results/upload-workflow-FDX-Upload-94f38-upport-drag-and-drop-upload-Mobile-Chrome/error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|upload-workflow-FDX-Upload-94f38-upport-drag-and-drop-upload-Mobile-Chrome/test-failed-1.png]]

[[ATTACHMENT|upload-workflow-FDX-Upload-94f38-upport-drag-and-drop-upload-Mobile-Chrome/error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="FDX Upload Workflow › should maintain editor state after page refresh" classname="upload-workflow.spec.ts" time="1.087">
<failure message="upload-workflow.spec.ts:153:7 should maintain editor state after page refresh" type="FAILURE">
<![CDATA[  [Mobile Chrome] › upload-workflow.spec.ts:153:7 › FDX Upload Workflow › should maintain editor state after page refresh 

    Error: ENOENT: no such file or directory, stat '/Users/ltw/Documents/GitHub/writersroom/frontend/__tests__/fixtures/fdx/valid/standard-screenplay.fdx'

      157 |     const fileInput = page.locator('input[type="file"]');
      158 |     const testFilePath = path.join(__dirname, '../__tests__/fixtures/fdx/valid/standard-screenplay.fdx');
    > 159 |     await fileInput.setInputFiles(testFilePath);
          |     ^
      160 |
      161 |     // Wait for parsing
      162 |     await expect(page.locator('[data-testid="loading-overlay"]')).toBeHidden({ timeout: 10000 });
        at /Users/ltw/Documents/GitHub/writersroom/frontend/e2e/upload-workflow.spec.ts:159:5

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ../test-results/upload-workflow-FDX-Upload-9f611-or-state-after-page-refresh-Mobile-Chrome/test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ../test-results/upload-workflow-FDX-Upload-9f611-or-state-after-page-refresh-Mobile-Chrome/error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|upload-workflow-FDX-Upload-9f611-or-state-after-page-refresh-Mobile-Chrome/test-failed-1.png]]

[[ATTACHMENT|upload-workflow-FDX-Upload-9f611-or-state-after-page-refresh-Mobile-Chrome/error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="FDX Upload Workflow › should navigate between scenes via sidebar" classname="upload-workflow.spec.ts" time="1.089">
<failure message="upload-workflow.spec.ts:187:7 should navigate between scenes via sidebar" type="FAILURE">
<![CDATA[  [Mobile Chrome] › upload-workflow.spec.ts:187:7 › FDX Upload Workflow › should navigate between scenes via sidebar 

    Error: ENOENT: no such file or directory, stat '/Users/ltw/Documents/GitHub/writersroom/frontend/__tests__/fixtures/fdx/valid/multiple-scenes.fdx'

      191 |     const fileInput = page.locator('input[type="file"]');
      192 |     const testFilePath = path.join(__dirname, '../__tests__/fixtures/fdx/valid/multiple-scenes.fdx');
    > 193 |     await fileInput.setInputFiles(testFilePath);
          |     ^
      194 |
      195 |     // Wait for parsing
      196 |     await expect(page.locator('[data-testid="loading-overlay"]')).toBeHidden({ timeout: 10000 });
        at /Users/ltw/Documents/GitHub/writersroom/frontend/e2e/upload-workflow.spec.ts:193:5

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ../test-results/upload-workflow-FDX-Upload-794c8--between-scenes-via-sidebar-Mobile-Chrome/test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ../test-results/upload-workflow-FDX-Upload-794c8--between-scenes-via-sidebar-Mobile-Chrome/error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|upload-workflow-FDX-Upload-794c8--between-scenes-via-sidebar-Mobile-Chrome/test-failed-1.png]]

[[ATTACHMENT|upload-workflow-FDX-Upload-794c8--between-scenes-via-sidebar-Mobile-Chrome/error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="FDX Upload Workflow › should show scene summaries in sidebar" classname="upload-workflow.spec.ts" time="0.851">
<failure message="upload-workflow.spec.ts:210:7 should show scene summaries in sidebar" type="FAILURE">
<![CDATA[  [Mobile Chrome] › upload-workflow.spec.ts:210:7 › FDX Upload Workflow › should show scene summaries in sidebar 

    Error: ENOENT: no such file or directory, stat '/Users/ltw/Documents/GitHub/writersroom/frontend/__tests__/fixtures/fdx/valid/standard-screenplay.fdx'

      214 |     const fileInput = page.locator('input[type="file"]');
      215 |     const testFilePath = path.join(__dirname, '../__tests__/fixtures/fdx/valid/standard-screenplay.fdx');
    > 216 |     await fileInput.setInputFiles(testFilePath);
          |     ^
      217 |
      218 |     // Wait for parsing
      219 |     await expect(page.locator('[data-testid="loading-overlay"]')).toBeHidden({ timeout: 10000 });
        at /Users/ltw/Documents/GitHub/writersroom/frontend/e2e/upload-workflow.spec.ts:216:5

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ../test-results/upload-workflow-FDX-Upload-9ffe0--scene-summaries-in-sidebar-Mobile-Chrome/test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ../test-results/upload-workflow-FDX-Upload-9ffe0--scene-summaries-in-sidebar-Mobile-Chrome/error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|upload-workflow-FDX-Upload-9ffe0--scene-summaries-in-sidebar-Mobile-Chrome/test-failed-1.png]]

[[ATTACHMENT|upload-workflow-FDX-Upload-9ffe0--scene-summaries-in-sidebar-Mobile-Chrome/error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="FDX Upload Workflow › should display scene metadata correctly" classname="upload-workflow.spec.ts" time="1.079">
<failure message="upload-workflow.spec.ts:233:7 should display scene metadata correctly" type="FAILURE">
<![CDATA[  [Mobile Chrome] › upload-workflow.spec.ts:233:7 › FDX Upload Workflow › should display scene metadata correctly 

    Error: ENOENT: no such file or directory, stat '/Users/ltw/Documents/GitHub/writersroom/frontend/__tests__/fixtures/fdx/valid/standard-screenplay.fdx'

      237 |     const fileInput = page.locator('input[type="file"]');
      238 |     const testFilePath = path.join(__dirname, '../__tests__/fixtures/fdx/valid/standard-screenplay.fdx');
    > 239 |     await fileInput.setInputFiles(testFilePath);
          |     ^
      240 |
      241 |     // Wait for parsing
      242 |     await expect(page.locator('[data-testid="loading-overlay"]')).toBeHidden({ timeout: 10000 });
        at /Users/ltw/Documents/GitHub/writersroom/frontend/e2e/upload-workflow.spec.ts:239:5

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ../test-results/upload-workflow-FDX-Upload-b70a6-ay-scene-metadata-correctly-Mobile-Chrome/test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ../test-results/upload-workflow-FDX-Upload-b70a6-ay-scene-metadata-correctly-Mobile-Chrome/error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|upload-workflow-FDX-Upload-b70a6-ay-scene-metadata-correctly-Mobile-Chrome/test-failed-1.png]]

[[ATTACHMENT|upload-workflow-FDX-Upload-b70a6-ay-scene-metadata-correctly-Mobile-Chrome/error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Upload Error Handling › should reject non-FDX files" classname="upload-workflow.spec.ts" time="0.71">
<failure message="upload-workflow.spec.ts:274:7 should reject non-FDX files" type="FAILURE">
<![CDATA[  [Mobile Chrome] › upload-workflow.spec.ts:274:7 › Upload Error Handling › should reject non-FDX files 

    Error: ENOENT: no such file or directory, stat '/Users/ltw/Documents/GitHub/writersroom/frontend/__tests__/fixtures/test-document.pdf'

      277 |     // Try uploading a PDF
      278 |     const pdfPath = path.join(__dirname, '../__tests__/fixtures/test-document.pdf');
    > 279 |     await fileInput.setInputFiles(pdfPath);
          |     ^
      280 |
      281 |     // Should show error
      282 |     await expect(page.locator('[data-testid="error-message"]')).toBeVisible();
        at /Users/ltw/Documents/GitHub/writersroom/frontend/e2e/upload-workflow.spec.ts:279:5

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ../test-results/upload-workflow-Upload-Err-5ebaa-should-reject-non-FDX-files-Mobile-Chrome/test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ../test-results/upload-workflow-Upload-Err-5ebaa-should-reject-non-FDX-files-Mobile-Chrome/error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|upload-workflow-Upload-Err-5ebaa-should-reject-non-FDX-files-Mobile-Chrome/test-failed-1.png]]

[[ATTACHMENT|upload-workflow-Upload-Err-5ebaa-should-reject-non-FDX-files-Mobile-Chrome/error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Upload Error Handling › should handle empty FDX files gracefully" classname="upload-workflow.spec.ts" time="0.577">
<failure message="upload-workflow.spec.ts:286:7 should handle empty FDX files gracefully" type="FAILURE">
<![CDATA[  [Mobile Chrome] › upload-workflow.spec.ts:286:7 › Upload Error Handling › should handle empty FDX files gracefully 

    Error: ENOENT: no such file or directory, stat '/Users/ltw/Documents/GitHub/writersroom/frontend/__tests__/fixtures/fdx/edge-cases/empty.fdx'

      289 |     // Upload empty FDX
      290 |     const emptyFDXPath = path.join(__dirname, '../__tests__/fixtures/fdx/edge-cases/empty.fdx');
    > 291 |     await fileInput.setInputFiles(emptyFDXPath);
          |     ^
      292 |
      293 |     // Should either show warning or load empty editor
      294 |     const warning = page.locator('[data-testid="empty-file-warning"]');
        at /Users/ltw/Documents/GitHub/writersroom/frontend/e2e/upload-workflow.spec.ts:291:5

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ../test-results/upload-workflow-Upload-Err-b6b0d--empty-FDX-files-gracefully-Mobile-Chrome/test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ../test-results/upload-workflow-Upload-Err-b6b0d--empty-FDX-files-gracefully-Mobile-Chrome/error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|upload-workflow-Upload-Err-b6b0d--empty-FDX-files-gracefully-Mobile-Chrome/test-failed-1.png]]

[[ATTACHMENT|upload-workflow-Upload-Err-b6b0d--empty-FDX-files-gracefully-Mobile-Chrome/error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Upload Error Handling › should handle malformed FDX XML" classname="upload-workflow.spec.ts" time="0.526">
<failure message="upload-workflow.spec.ts:300:7 should handle malformed FDX XML" type="FAILURE">
<![CDATA[  [Mobile Chrome] › upload-workflow.spec.ts:300:7 › Upload Error Handling › should handle malformed FDX XML 

    Error: ENOENT: no such file or directory, stat '/Users/ltw/Documents/GitHub/writersroom/frontend/__tests__/fixtures/fdx/edge-cases/malformed.fdx'

      303 |     // Upload malformed FDX
      304 |     const malformedPath = path.join(__dirname, '../__tests__/fixtures/fdx/edge-cases/malformed.fdx');
    > 305 |     await fileInput.setInputFiles(malformedPath);
          |     ^
      306 |
      307 |     // Should show parsing error
      308 |     await expect(page.locator('[data-testid="error-message"]')).toBeVisible();
        at /Users/ltw/Documents/GitHub/writersroom/frontend/e2e/upload-workflow.spec.ts:305:5

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ../test-results/upload-workflow-Upload-Err-7139f-ld-handle-malformed-FDX-XML-Mobile-Chrome/test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ../test-results/upload-workflow-Upload-Err-7139f-ld-handle-malformed-FDX-XML-Mobile-Chrome/error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|upload-workflow-Upload-Err-7139f-ld-handle-malformed-FDX-XML-Mobile-Chrome/test-failed-1.png]]

[[ATTACHMENT|upload-workflow-Upload-Err-7139f-ld-handle-malformed-FDX-XML-Mobile-Chrome/error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Upload Error Handling › should provide retry option on upload failure" classname="upload-workflow.spec.ts" time="0.767">
<failure message="upload-workflow.spec.ts:312:7 should provide retry option on upload failure" type="FAILURE">
<![CDATA[  [Mobile Chrome] › upload-workflow.spec.ts:312:7 › Upload Error Handling › should provide retry option on upload failure 

    Error: ENOENT: no such file or directory, stat '/Users/ltw/Documents/GitHub/writersroom/frontend/__tests__/fixtures/fdx/valid/standard-screenplay.fdx'

      318 |     const fileInput = page.locator('input[type="file"]');
      319 |     const testFilePath = path.join(__dirname, '../__tests__/fixtures/fdx/valid/standard-screenplay.fdx');
    > 320 |     await fileInput.setInputFiles(testFilePath);
          |     ^
      321 |
      322 |     // Should show error with retry button
      323 |     await expect(page.locator('[data-testid="error-message"]')).toBeVisible();
        at /Users/ltw/Documents/GitHub/writersroom/frontend/e2e/upload-workflow.spec.ts:320:5

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ../test-results/upload-workflow-Upload-Err-41bb2-ry-option-on-upload-failure-Mobile-Chrome/test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ../test-results/upload-workflow-Upload-Err-41bb2-ry-option-on-upload-failure-Mobile-Chrome/error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|upload-workflow-Upload-Err-41bb2-ry-option-on-upload-failure-Mobile-Chrome/test-failed-1.png]]

[[ATTACHMENT|upload-workflow-Upload-Err-41bb2-ry-option-on-upload-failure-Mobile-Chrome/error-context.md]]
]]>
</system-out>
</testcase>
</testsuite>
<testsuite name="upload-workflow.spec.ts" timestamp="2025-09-22T21:33:59.886Z" hostname="Mobile Safari" tests="13" failures="13" skipped="0" time="0.028" errors="0">
<testcase name="FDX Upload Workflow › should upload and parse a valid FDX file" classname="upload-workflow.spec.ts" time="0.003">
<failure message="upload-workflow.spec.ts:23:7 should upload and parse a valid FDX file" type="FAILURE">
<![CDATA[  [Mobile Safari] › upload-workflow.spec.ts:23:7 › FDX Upload Workflow › should upload and parse a valid FDX file 

    Error: browserType.launch: Executable doesn't exist at /Users/ltw/Library/Caches/ms-playwright/webkit-2203/pw_run.sh
    ╔═════════════════════════════════════════════════════════════════════════╗
    ║ Looks like Playwright Test or Playwright was just installed or updated. ║
    ║ Please run the following command to download new browsers:              ║
    ║                                                                         ║
    ║     npx playwright install                                              ║
    ║                                                                         ║
    ║ <3 Playwright Team                                                      ║
    ╚═════════════════════════════════════════════════════════════════════════╝

    TypeError: Cannot read properties of undefined (reading 'close')

      18 |
      19 |   test.afterEach(async () => {
    > 20 |     await page.close();
         |                ^
      21 |   });
      22 |
      23 |   test('should upload and parse a valid FDX file', async () => {
        at /Users/ltw/Documents/GitHub/writersroom/frontend/e2e/upload-workflow.spec.ts:20:16
]]>
</failure>
</testcase>
<testcase name="FDX Upload Workflow › should display error for invalid FDX file" classname="upload-workflow.spec.ts" time="0.002">
<failure message="upload-workflow.spec.ts:51:7 should display error for invalid FDX file" type="FAILURE">
<![CDATA[  [Mobile Safari] › upload-workflow.spec.ts:51:7 › FDX Upload Workflow › should display error for invalid FDX file 

    Error: browserType.launch: Executable doesn't exist at /Users/ltw/Library/Caches/ms-playwright/webkit-2203/pw_run.sh
    ╔═════════════════════════════════════════════════════════════════════════╗
    ║ Looks like Playwright Test or Playwright was just installed or updated. ║
    ║ Please run the following command to download new browsers:              ║
    ║                                                                         ║
    ║     npx playwright install                                              ║
    ║                                                                         ║
    ║ <3 Playwright Team                                                      ║
    ╚═════════════════════════════════════════════════════════════════════════╝

    TypeError: Cannot read properties of undefined (reading 'close')

      18 |
      19 |   test.afterEach(async () => {
    > 20 |     await page.close();
         |                ^
      21 |   });
      22 |
      23 |   test('should upload and parse a valid FDX file', async () => {
        at /Users/ltw/Documents/GitHub/writersroom/frontend/e2e/upload-workflow.spec.ts:20:16
]]>
</failure>
</testcase>
<testcase name="FDX Upload Workflow › should preserve scene order from FDX file" classname="upload-workflow.spec.ts" time="0.002">
<failure message="upload-workflow.spec.ts:64:7 should preserve scene order from FDX file" type="FAILURE">
<![CDATA[  [Mobile Safari] › upload-workflow.spec.ts:64:7 › FDX Upload Workflow › should preserve scene order from FDX file 

    Error: browserType.launch: Executable doesn't exist at /Users/ltw/Library/Caches/ms-playwright/webkit-2203/pw_run.sh
    ╔═════════════════════════════════════════════════════════════════════════╗
    ║ Looks like Playwright Test or Playwright was just installed or updated. ║
    ║ Please run the following command to download new browsers:              ║
    ║                                                                         ║
    ║     npx playwright install                                              ║
    ║                                                                         ║
    ║ <3 Playwright Team                                                      ║
    ╚═════════════════════════════════════════════════════════════════════════╝

    TypeError: Cannot read properties of undefined (reading 'close')

      18 |
      19 |   test.afterEach(async () => {
    > 20 |     await page.close();
         |                ^
      21 |   });
      22 |
      23 |   test('should upload and parse a valid FDX file', async () => {
        at /Users/ltw/Documents/GitHub/writersroom/frontend/e2e/upload-workflow.spec.ts:20:16
]]>
</failure>
</testcase>
<testcase name="FDX Upload Workflow › should handle large FDX files" classname="upload-workflow.spec.ts" time="0.002">
<failure message="upload-workflow.spec.ts:88:7 should handle large FDX files" type="FAILURE">
<![CDATA[  [Mobile Safari] › upload-workflow.spec.ts:88:7 › FDX Upload Workflow › should handle large FDX files 

    Error: browserType.launch: Executable doesn't exist at /Users/ltw/Library/Caches/ms-playwright/webkit-2203/pw_run.sh
    ╔═════════════════════════════════════════════════════════════════════════╗
    ║ Looks like Playwright Test or Playwright was just installed or updated. ║
    ║ Please run the following command to download new browsers:              ║
    ║                                                                         ║
    ║     npx playwright install                                              ║
    ║                                                                         ║
    ║ <3 Playwright Team                                                      ║
    ╚═════════════════════════════════════════════════════════════════════════╝

    TypeError: Cannot read properties of undefined (reading 'close')

      18 |
      19 |   test.afterEach(async () => {
    > 20 |     await page.close();
         |                ^
      21 |   });
      22 |
      23 |   test('should upload and parse a valid FDX file', async () => {
        at /Users/ltw/Documents/GitHub/writersroom/frontend/e2e/upload-workflow.spec.ts:20:16
]]>
</failure>
</testcase>
<testcase name="FDX Upload Workflow › should support drag and drop upload" classname="upload-workflow.spec.ts" time="0.002">
<failure message="upload-workflow.spec.ts:113:7 should support drag and drop upload" type="FAILURE">
<![CDATA[  [Mobile Safari] › upload-workflow.spec.ts:113:7 › FDX Upload Workflow › should support drag and drop upload 

    Error: browserType.launch: Executable doesn't exist at /Users/ltw/Library/Caches/ms-playwright/webkit-2203/pw_run.sh
    ╔═════════════════════════════════════════════════════════════════════════╗
    ║ Looks like Playwright Test or Playwright was just installed or updated. ║
    ║ Please run the following command to download new browsers:              ║
    ║                                                                         ║
    ║     npx playwright install                                              ║
    ║                                                                         ║
    ║ <3 Playwright Team                                                      ║
    ╚═════════════════════════════════════════════════════════════════════════╝

    TypeError: Cannot read properties of undefined (reading 'close')

      18 |
      19 |   test.afterEach(async () => {
    > 20 |     await page.close();
         |                ^
      21 |   });
      22 |
      23 |   test('should upload and parse a valid FDX file', async () => {
        at /Users/ltw/Documents/GitHub/writersroom/frontend/e2e/upload-workflow.spec.ts:20:16
]]>
</failure>
</testcase>
<testcase name="FDX Upload Workflow › should maintain editor state after page refresh" classname="upload-workflow.spec.ts" time="0.002">
<failure message="upload-workflow.spec.ts:153:7 should maintain editor state after page refresh" type="FAILURE">
<![CDATA[  [Mobile Safari] › upload-workflow.spec.ts:153:7 › FDX Upload Workflow › should maintain editor state after page refresh 

    Error: browserType.launch: Executable doesn't exist at /Users/ltw/Library/Caches/ms-playwright/webkit-2203/pw_run.sh
    ╔═════════════════════════════════════════════════════════════════════════╗
    ║ Looks like Playwright Test or Playwright was just installed or updated. ║
    ║ Please run the following command to download new browsers:              ║
    ║                                                                         ║
    ║     npx playwright install                                              ║
    ║                                                                         ║
    ║ <3 Playwright Team                                                      ║
    ╚═════════════════════════════════════════════════════════════════════════╝

    TypeError: Cannot read properties of undefined (reading 'close')

      18 |
      19 |   test.afterEach(async () => {
    > 20 |     await page.close();
         |                ^
      21 |   });
      22 |
      23 |   test('should upload and parse a valid FDX file', async () => {
        at /Users/ltw/Documents/GitHub/writersroom/frontend/e2e/upload-workflow.spec.ts:20:16
]]>
</failure>
</testcase>
<testcase name="FDX Upload Workflow › should navigate between scenes via sidebar" classname="upload-workflow.spec.ts" time="0.002">
<failure message="upload-workflow.spec.ts:187:7 should navigate between scenes via sidebar" type="FAILURE">
<![CDATA[  [Mobile Safari] › upload-workflow.spec.ts:187:7 › FDX Upload Workflow › should navigate between scenes via sidebar 

    Error: browserType.launch: Executable doesn't exist at /Users/ltw/Library/Caches/ms-playwright/webkit-2203/pw_run.sh
    ╔═════════════════════════════════════════════════════════════════════════╗
    ║ Looks like Playwright Test or Playwright was just installed or updated. ║
    ║ Please run the following command to download new browsers:              ║
    ║                                                                         ║
    ║     npx playwright install                                              ║
    ║                                                                         ║
    ║ <3 Playwright Team                                                      ║
    ╚═════════════════════════════════════════════════════════════════════════╝

    TypeError: Cannot read properties of undefined (reading 'close')

      18 |
      19 |   test.afterEach(async () => {
    > 20 |     await page.close();
         |                ^
      21 |   });
      22 |
      23 |   test('should upload and parse a valid FDX file', async () => {
        at /Users/ltw/Documents/GitHub/writersroom/frontend/e2e/upload-workflow.spec.ts:20:16
]]>
</failure>
</testcase>
<testcase name="FDX Upload Workflow › should show scene summaries in sidebar" classname="upload-workflow.spec.ts" time="0.002">
<failure message="upload-workflow.spec.ts:210:7 should show scene summaries in sidebar" type="FAILURE">
<![CDATA[  [Mobile Safari] › upload-workflow.spec.ts:210:7 › FDX Upload Workflow › should show scene summaries in sidebar 

    Error: browserType.launch: Executable doesn't exist at /Users/ltw/Library/Caches/ms-playwright/webkit-2203/pw_run.sh
    ╔═════════════════════════════════════════════════════════════════════════╗
    ║ Looks like Playwright Test or Playwright was just installed or updated. ║
    ║ Please run the following command to download new browsers:              ║
    ║                                                                         ║
    ║     npx playwright install                                              ║
    ║                                                                         ║
    ║ <3 Playwright Team                                                      ║
    ╚═════════════════════════════════════════════════════════════════════════╝

    TypeError: Cannot read properties of undefined (reading 'close')

      18 |
      19 |   test.afterEach(async () => {
    > 20 |     await page.close();
         |                ^
      21 |   });
      22 |
      23 |   test('should upload and parse a valid FDX file', async () => {
        at /Users/ltw/Documents/GitHub/writersroom/frontend/e2e/upload-workflow.spec.ts:20:16
]]>
</failure>
</testcase>
<testcase name="FDX Upload Workflow › should display scene metadata correctly" classname="upload-workflow.spec.ts" time="0.002">
<failure message="upload-workflow.spec.ts:233:7 should display scene metadata correctly" type="FAILURE">
<![CDATA[  [Mobile Safari] › upload-workflow.spec.ts:233:7 › FDX Upload Workflow › should display scene metadata correctly 

    Error: browserType.launch: Executable doesn't exist at /Users/ltw/Library/Caches/ms-playwright/webkit-2203/pw_run.sh
    ╔═════════════════════════════════════════════════════════════════════════╗
    ║ Looks like Playwright Test or Playwright was just installed or updated. ║
    ║ Please run the following command to download new browsers:              ║
    ║                                                                         ║
    ║     npx playwright install                                              ║
    ║                                                                         ║
    ║ <3 Playwright Team                                                      ║
    ╚═════════════════════════════════════════════════════════════════════════╝

    TypeError: Cannot read properties of undefined (reading 'close')

      18 |
      19 |   test.afterEach(async () => {
    > 20 |     await page.close();
         |                ^
      21 |   });
      22 |
      23 |   test('should upload and parse a valid FDX file', async () => {
        at /Users/ltw/Documents/GitHub/writersroom/frontend/e2e/upload-workflow.spec.ts:20:16
]]>
</failure>
</testcase>
<testcase name="Upload Error Handling › should reject non-FDX files" classname="upload-workflow.spec.ts" time="0.003">
<failure message="upload-workflow.spec.ts:274:7 should reject non-FDX files" type="FAILURE">
<![CDATA[  [Mobile Safari] › upload-workflow.spec.ts:274:7 › Upload Error Handling › should reject non-FDX files 

    Error: browserType.launch: Executable doesn't exist at /Users/ltw/Library/Caches/ms-playwright/webkit-2203/pw_run.sh
    ╔═════════════════════════════════════════════════════════════════════════╗
    ║ Looks like Playwright Test or Playwright was just installed or updated. ║
    ║ Please run the following command to download new browsers:              ║
    ║                                                                         ║
    ║     npx playwright install                                              ║
    ║                                                                         ║
    ║ <3 Playwright Team                                                      ║
    ╚═════════════════════════════════════════════════════════════════════════╝

    TypeError: Cannot read properties of undefined (reading 'close')

      269 |
      270 |   test.afterEach(async () => {
    > 271 |     await page.close();
          |                ^
      272 |   });
      273 |
      274 |   test('should reject non-FDX files', async () => {
        at /Users/ltw/Documents/GitHub/writersroom/frontend/e2e/upload-workflow.spec.ts:271:16
]]>
</failure>
</testcase>
<testcase name="Upload Error Handling › should handle empty FDX files gracefully" classname="upload-workflow.spec.ts" time="0.002">
<failure message="upload-workflow.spec.ts:286:7 should handle empty FDX files gracefully" type="FAILURE">
<![CDATA[  [Mobile Safari] › upload-workflow.spec.ts:286:7 › Upload Error Handling › should handle empty FDX files gracefully 

    Error: browserType.launch: Executable doesn't exist at /Users/ltw/Library/Caches/ms-playwright/webkit-2203/pw_run.sh
    ╔═════════════════════════════════════════════════════════════════════════╗
    ║ Looks like Playwright Test or Playwright was just installed or updated. ║
    ║ Please run the following command to download new browsers:              ║
    ║                                                                         ║
    ║     npx playwright install                                              ║
    ║                                                                         ║
    ║ <3 Playwright Team                                                      ║
    ╚═════════════════════════════════════════════════════════════════════════╝

    TypeError: Cannot read properties of undefined (reading 'close')

      269 |
      270 |   test.afterEach(async () => {
    > 271 |     await page.close();
          |                ^
      272 |   });
      273 |
      274 |   test('should reject non-FDX files', async () => {
        at /Users/ltw/Documents/GitHub/writersroom/frontend/e2e/upload-workflow.spec.ts:271:16
]]>
</failure>
</testcase>
<testcase name="Upload Error Handling › should handle malformed FDX XML" classname="upload-workflow.spec.ts" time="0.002">
<failure message="upload-workflow.spec.ts:300:7 should handle malformed FDX XML" type="FAILURE">
<![CDATA[  [Mobile Safari] › upload-workflow.spec.ts:300:7 › Upload Error Handling › should handle malformed FDX XML 

    Error: browserType.launch: Executable doesn't exist at /Users/ltw/Library/Caches/ms-playwright/webkit-2203/pw_run.sh
    ╔═════════════════════════════════════════════════════════════════════════╗
    ║ Looks like Playwright Test or Playwright was just installed or updated. ║
    ║ Please run the following command to download new browsers:              ║
    ║                                                                         ║
    ║     npx playwright install                                              ║
    ║                                                                         ║
    ║ <3 Playwright Team                                                      ║
    ╚═════════════════════════════════════════════════════════════════════════╝

    TypeError: Cannot read properties of undefined (reading 'close')

      269 |
      270 |   test.afterEach(async () => {
    > 271 |     await page.close();
          |                ^
      272 |   });
      273 |
      274 |   test('should reject non-FDX files', async () => {
        at /Users/ltw/Documents/GitHub/writersroom/frontend/e2e/upload-workflow.spec.ts:271:16
]]>
</failure>
</testcase>
<testcase name="Upload Error Handling › should provide retry option on upload failure" classname="upload-workflow.spec.ts" time="0.002">
<failure message="upload-workflow.spec.ts:312:7 should provide retry option on upload failure" type="FAILURE">
<![CDATA[  [Mobile Safari] › upload-workflow.spec.ts:312:7 › Upload Error Handling › should provide retry option on upload failure 

    Error: browserType.launch: Executable doesn't exist at /Users/ltw/Library/Caches/ms-playwright/webkit-2203/pw_run.sh
    ╔═════════════════════════════════════════════════════════════════════════╗
    ║ Looks like Playwright Test or Playwright was just installed or updated. ║
    ║ Please run the following command to download new browsers:              ║
    ║                                                                         ║
    ║     npx playwright install                                              ║
    ║                                                                         ║
    ║ <3 Playwright Team                                                      ║
    ╚═════════════════════════════════════════════════════════════════════════╝

    TypeError: Cannot read properties of undefined (reading 'close')

      269 |
      270 |   test.afterEach(async () => {
    > 271 |     await page.close();
          |                ^
      272 |   });
      273 |
      274 |   test('should reject non-FDX files', async () => {
        at /Users/ltw/Documents/GitHub/writersroom/frontend/e2e/upload-workflow.spec.ts:271:16
]]>
</failure>
</testcase>
</testsuite>
<testsuite name="upload-workflow.spec.ts" timestamp="2025-09-22T21:33:59.886Z" hostname="Microsoft Edge" tests="13" failures="13" skipped="0" time="0.03" errors="0">
<testcase name="FDX Upload Workflow › should upload and parse a valid FDX file" classname="upload-workflow.spec.ts" time="0.002">
<failure message="upload-workflow.spec.ts:23:7 should upload and parse a valid FDX file" type="FAILURE">
<![CDATA[  [Microsoft Edge] › upload-workflow.spec.ts:23:7 › FDX Upload Workflow › should upload and parse a valid FDX file 

    Error: browserType.launch: Chromium distribution 'msedge' is not found at /Applications/Microsoft Edge.app/Contents/MacOS/Microsoft Edge
    Run "npx playwright install msedge"

    TypeError: Cannot read properties of undefined (reading 'close')

      18 |
      19 |   test.afterEach(async () => {
    > 20 |     await page.close();
         |                ^
      21 |   });
      22 |
      23 |   test('should upload and parse a valid FDX file', async () => {
        at /Users/ltw/Documents/GitHub/writersroom/frontend/e2e/upload-workflow.spec.ts:20:16
]]>
</failure>
</testcase>
<testcase name="FDX Upload Workflow › should display error for invalid FDX file" classname="upload-workflow.spec.ts" time="0.003">
<failure message="upload-workflow.spec.ts:51:7 should display error for invalid FDX file" type="FAILURE">
<![CDATA[  [Microsoft Edge] › upload-workflow.spec.ts:51:7 › FDX Upload Workflow › should display error for invalid FDX file 

    Error: browserType.launch: Chromium distribution 'msedge' is not found at /Applications/Microsoft Edge.app/Contents/MacOS/Microsoft Edge
    Run "npx playwright install msedge"

    TypeError: Cannot read properties of undefined (reading 'close')

      18 |
      19 |   test.afterEach(async () => {
    > 20 |     await page.close();
         |                ^
      21 |   });
      22 |
      23 |   test('should upload and parse a valid FDX file', async () => {
        at /Users/ltw/Documents/GitHub/writersroom/frontend/e2e/upload-workflow.spec.ts:20:16
]]>
</failure>
</testcase>
<testcase name="FDX Upload Workflow › should preserve scene order from FDX file" classname="upload-workflow.spec.ts" time="0.003">
<failure message="upload-workflow.spec.ts:64:7 should preserve scene order from FDX file" type="FAILURE">
<![CDATA[  [Microsoft Edge] › upload-workflow.spec.ts:64:7 › FDX Upload Workflow › should preserve scene order from FDX file 

    Error: browserType.launch: Chromium distribution 'msedge' is not found at /Applications/Microsoft Edge.app/Contents/MacOS/Microsoft Edge
    Run "npx playwright install msedge"

    TypeError: Cannot read properties of undefined (reading 'close')

      18 |
      19 |   test.afterEach(async () => {
    > 20 |     await page.close();
         |                ^
      21 |   });
      22 |
      23 |   test('should upload and parse a valid FDX file', async () => {
        at /Users/ltw/Documents/GitHub/writersroom/frontend/e2e/upload-workflow.spec.ts:20:16
]]>
</failure>
</testcase>
<testcase name="FDX Upload Workflow › should handle large FDX files" classname="upload-workflow.spec.ts" time="0.002">
<failure message="upload-workflow.spec.ts:88:7 should handle large FDX files" type="FAILURE">
<![CDATA[  [Microsoft Edge] › upload-workflow.spec.ts:88:7 › FDX Upload Workflow › should handle large FDX files 

    Error: browserType.launch: Chromium distribution 'msedge' is not found at /Applications/Microsoft Edge.app/Contents/MacOS/Microsoft Edge
    Run "npx playwright install msedge"

    TypeError: Cannot read properties of undefined (reading 'close')

      18 |
      19 |   test.afterEach(async () => {
    > 20 |     await page.close();
         |                ^
      21 |   });
      22 |
      23 |   test('should upload and parse a valid FDX file', async () => {
        at /Users/ltw/Documents/GitHub/writersroom/frontend/e2e/upload-workflow.spec.ts:20:16
]]>
</failure>
</testcase>
<testcase name="FDX Upload Workflow › should support drag and drop upload" classname="upload-workflow.spec.ts" time="0.002">
<failure message="upload-workflow.spec.ts:113:7 should support drag and drop upload" type="FAILURE">
<![CDATA[  [Microsoft Edge] › upload-workflow.spec.ts:113:7 › FDX Upload Workflow › should support drag and drop upload 

    Error: browserType.launch: Chromium distribution 'msedge' is not found at /Applications/Microsoft Edge.app/Contents/MacOS/Microsoft Edge
    Run "npx playwright install msedge"

    TypeError: Cannot read properties of undefined (reading 'close')

      18 |
      19 |   test.afterEach(async () => {
    > 20 |     await page.close();
         |                ^
      21 |   });
      22 |
      23 |   test('should upload and parse a valid FDX file', async () => {
        at /Users/ltw/Documents/GitHub/writersroom/frontend/e2e/upload-workflow.spec.ts:20:16
]]>
</failure>
</testcase>
<testcase name="FDX Upload Workflow › should maintain editor state after page refresh" classname="upload-workflow.spec.ts" time="0.002">
<failure message="upload-workflow.spec.ts:153:7 should maintain editor state after page refresh" type="FAILURE">
<![CDATA[  [Microsoft Edge] › upload-workflow.spec.ts:153:7 › FDX Upload Workflow › should maintain editor state after page refresh 

    Error: browserType.launch: Chromium distribution 'msedge' is not found at /Applications/Microsoft Edge.app/Contents/MacOS/Microsoft Edge
    Run "npx playwright install msedge"

    TypeError: Cannot read properties of undefined (reading 'close')

      18 |
      19 |   test.afterEach(async () => {
    > 20 |     await page.close();
         |                ^
      21 |   });
      22 |
      23 |   test('should upload and parse a valid FDX file', async () => {
        at /Users/ltw/Documents/GitHub/writersroom/frontend/e2e/upload-workflow.spec.ts:20:16
]]>
</failure>
</testcase>
<testcase name="FDX Upload Workflow › should navigate between scenes via sidebar" classname="upload-workflow.spec.ts" time="0.002">
<failure message="upload-workflow.spec.ts:187:7 should navigate between scenes via sidebar" type="FAILURE">
<![CDATA[  [Microsoft Edge] › upload-workflow.spec.ts:187:7 › FDX Upload Workflow › should navigate between scenes via sidebar 

    Error: browserType.launch: Chromium distribution 'msedge' is not found at /Applications/Microsoft Edge.app/Contents/MacOS/Microsoft Edge
    Run "npx playwright install msedge"

    TypeError: Cannot read properties of undefined (reading 'close')

      18 |
      19 |   test.afterEach(async () => {
    > 20 |     await page.close();
         |                ^
      21 |   });
      22 |
      23 |   test('should upload and parse a valid FDX file', async () => {
        at /Users/ltw/Documents/GitHub/writersroom/frontend/e2e/upload-workflow.spec.ts:20:16
]]>
</failure>
</testcase>
<testcase name="FDX Upload Workflow › should show scene summaries in sidebar" classname="upload-workflow.spec.ts" time="0.003">
<failure message="upload-workflow.spec.ts:210:7 should show scene summaries in sidebar" type="FAILURE">
<![CDATA[  [Microsoft Edge] › upload-workflow.spec.ts:210:7 › FDX Upload Workflow › should show scene summaries in sidebar 

    Error: browserType.launch: Chromium distribution 'msedge' is not found at /Applications/Microsoft Edge.app/Contents/MacOS/Microsoft Edge
    Run "npx playwright install msedge"

    TypeError: Cannot read properties of undefined (reading 'close')

      18 |
      19 |   test.afterEach(async () => {
    > 20 |     await page.close();
         |                ^
      21 |   });
      22 |
      23 |   test('should upload and parse a valid FDX file', async () => {
        at /Users/ltw/Documents/GitHub/writersroom/frontend/e2e/upload-workflow.spec.ts:20:16
]]>
</failure>
</testcase>
<testcase name="FDX Upload Workflow › should display scene metadata correctly" classname="upload-workflow.spec.ts" time="0.002">
<failure message="upload-workflow.spec.ts:233:7 should display scene metadata correctly" type="FAILURE">
<![CDATA[  [Microsoft Edge] › upload-workflow.spec.ts:233:7 › FDX Upload Workflow › should display scene metadata correctly 

    Error: browserType.launch: Chromium distribution 'msedge' is not found at /Applications/Microsoft Edge.app/Contents/MacOS/Microsoft Edge
    Run "npx playwright install msedge"

    TypeError: Cannot read properties of undefined (reading 'close')

      18 |
      19 |   test.afterEach(async () => {
    > 20 |     await page.close();
         |                ^
      21 |   });
      22 |
      23 |   test('should upload and parse a valid FDX file', async () => {
        at /Users/ltw/Documents/GitHub/writersroom/frontend/e2e/upload-workflow.spec.ts:20:16
]]>
</failure>
</testcase>
<testcase name="Upload Error Handling › should reject non-FDX files" classname="upload-workflow.spec.ts" time="0.002">
<failure message="upload-workflow.spec.ts:274:7 should reject non-FDX files" type="FAILURE">
<![CDATA[  [Microsoft Edge] › upload-workflow.spec.ts:274:7 › Upload Error Handling › should reject non-FDX files 

    Error: browserType.launch: Chromium distribution 'msedge' is not found at /Applications/Microsoft Edge.app/Contents/MacOS/Microsoft Edge
    Run "npx playwright install msedge"

    TypeError: Cannot read properties of undefined (reading 'close')

      269 |
      270 |   test.afterEach(async () => {
    > 271 |     await page.close();
          |                ^
      272 |   });
      273 |
      274 |   test('should reject non-FDX files', async () => {
        at /Users/ltw/Documents/GitHub/writersroom/frontend/e2e/upload-workflow.spec.ts:271:16
]]>
</failure>
</testcase>
<testcase name="Upload Error Handling › should handle empty FDX files gracefully" classname="upload-workflow.spec.ts" time="0.003">
<failure message="upload-workflow.spec.ts:286:7 should handle empty FDX files gracefully" type="FAILURE">
<![CDATA[  [Microsoft Edge] › upload-workflow.spec.ts:286:7 › Upload Error Handling › should handle empty FDX files gracefully 

    Error: browserType.launch: Chromium distribution 'msedge' is not found at /Applications/Microsoft Edge.app/Contents/MacOS/Microsoft Edge
    Run "npx playwright install msedge"

    TypeError: Cannot read properties of undefined (reading 'close')

      269 |
      270 |   test.afterEach(async () => {
    > 271 |     await page.close();
          |                ^
      272 |   });
      273 |
      274 |   test('should reject non-FDX files', async () => {
        at /Users/ltw/Documents/GitHub/writersroom/frontend/e2e/upload-workflow.spec.ts:271:16
]]>
</failure>
</testcase>
<testcase name="Upload Error Handling › should handle malformed FDX XML" classname="upload-workflow.spec.ts" time="0.002">
<failure message="upload-workflow.spec.ts:300:7 should handle malformed FDX XML" type="FAILURE">
<![CDATA[  [Microsoft Edge] › upload-workflow.spec.ts:300:7 › Upload Error Handling › should handle malformed FDX XML 

    Error: browserType.launch: Chromium distribution 'msedge' is not found at /Applications/Microsoft Edge.app/Contents/MacOS/Microsoft Edge
    Run "npx playwright install msedge"

    TypeError: Cannot read properties of undefined (reading 'close')

      269 |
      270 |   test.afterEach(async () => {
    > 271 |     await page.close();
          |                ^
      272 |   });
      273 |
      274 |   test('should reject non-FDX files', async () => {
        at /Users/ltw/Documents/GitHub/writersroom/frontend/e2e/upload-workflow.spec.ts:271:16
]]>
</failure>
</testcase>
<testcase name="Upload Error Handling › should provide retry option on upload failure" classname="upload-workflow.spec.ts" time="0.002">
<failure message="upload-workflow.spec.ts:312:7 should provide retry option on upload failure" type="FAILURE">
<![CDATA[  [Microsoft Edge] › upload-workflow.spec.ts:312:7 › Upload Error Handling › should provide retry option on upload failure 

    Error: browserType.launch: Chromium distribution 'msedge' is not found at /Applications/Microsoft Edge.app/Contents/MacOS/Microsoft Edge
    Run "npx playwright install msedge"

    TypeError: Cannot read properties of undefined (reading 'close')

      269 |
      270 |   test.afterEach(async () => {
    > 271 |     await page.close();
          |                ^
      272 |   });
      273 |
      274 |   test('should reject non-FDX files', async () => {
        at /Users/ltw/Documents/GitHub/writersroom/frontend/e2e/upload-workflow.spec.ts:271:16
]]>
</failure>
</testcase>
</testsuite>
<testsuite name="upload-workflow.spec.ts" timestamp="2025-09-22T21:33:59.886Z" hostname="Google Chrome" tests="13" failures="13" skipped="0" time="55.185" errors="0">
<testcase name="FDX Upload Workflow › should upload and parse a valid FDX file" classname="upload-workflow.spec.ts" time="11.361">
<failure message="upload-workflow.spec.ts:23:7 should upload and parse a valid FDX file" type="FAILURE">
<![CDATA[  [Google Chrome] › upload-workflow.spec.ts:23:7 › FDX Upload Workflow › should upload and parse a valid FDX file 

    Error: expect(locator).toBeVisible() failed

    Locator:  locator('[data-testid="upload-area"]')
    Expected: visible
    Received: <element(s) not found>
    Timeout:  5000ms

    Call log:
      - Expect "toBeVisible" with timeout 5000ms
      - waiting for locator('[data-testid="upload-area"]')


      26 |
      27 |     // Wait for the upload area to be visible
    > 28 |     await expect(page.locator('[data-testid="upload-area"]')).toBeVisible();
         |                                                               ^
      29 |
      30 |     // Upload a test FDX file
      31 |     const fileInput = page.locator('input[type="file"]');
        at /Users/ltw/Documents/GitHub/writersroom/frontend/e2e/upload-workflow.spec.ts:28:63

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ../test-results/upload-workflow-FDX-Upload-9bda4--and-parse-a-valid-FDX-file-Google-Chrome/test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ../test-results/upload-workflow-FDX-Upload-9bda4--and-parse-a-valid-FDX-file-Google-Chrome/error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|upload-workflow-FDX-Upload-9bda4--and-parse-a-valid-FDX-file-Google-Chrome/test-failed-1.png]]

[[ATTACHMENT|upload-workflow-FDX-Upload-9bda4--and-parse-a-valid-FDX-file-Google-Chrome/error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="FDX Upload Workflow › should display error for invalid FDX file" classname="upload-workflow.spec.ts" time="6.906">
<failure message="upload-workflow.spec.ts:51:7 should display error for invalid FDX file" type="FAILURE">
<![CDATA[  [Google Chrome] › upload-workflow.spec.ts:51:7 › FDX Upload Workflow › should display error for invalid FDX file 

    Error: ENOENT: no such file or directory, stat '/Users/ltw/Documents/GitHub/writersroom/frontend/__tests__/fixtures/invalid-file.txt'

      55 |     const fileInput = page.locator('input[type="file"]');
      56 |     const invalidFile = path.join(__dirname, '../__tests__/fixtures/invalid-file.txt');
    > 57 |     await fileInput.setInputFiles(invalidFile);
         |     ^
      58 |
      59 |     // Wait for and verify error message
      60 |     await expect(page.locator('[data-testid="error-message"]')).toBeVisible({ timeout: 5000 });
        at /Users/ltw/Documents/GitHub/writersroom/frontend/e2e/upload-workflow.spec.ts:57:5

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ../test-results/upload-workflow-FDX-Upload-98dc0--error-for-invalid-FDX-file-Google-Chrome/test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ../test-results/upload-workflow-FDX-Upload-98dc0--error-for-invalid-FDX-file-Google-Chrome/error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|upload-workflow-FDX-Upload-98dc0--error-for-invalid-FDX-file-Google-Chrome/test-failed-1.png]]

[[ATTACHMENT|upload-workflow-FDX-Upload-98dc0--error-for-invalid-FDX-file-Google-Chrome/error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="FDX Upload Workflow › should preserve scene order from FDX file" classname="upload-workflow.spec.ts" time="7.101">
<failure message="upload-workflow.spec.ts:64:7 should preserve scene order from FDX file" type="FAILURE">
<![CDATA[  [Google Chrome] › upload-workflow.spec.ts:64:7 › FDX Upload Workflow › should preserve scene order from FDX file 

    Error: ENOENT: no such file or directory, stat '/Users/ltw/Documents/GitHub/writersroom/frontend/__tests__/fixtures/fdx/valid/multiple-scenes.fdx'

      68 |     const fileInput = page.locator('input[type="file"]');
      69 |     const testFilePath = path.join(__dirname, '../__tests__/fixtures/fdx/valid/multiple-scenes.fdx');
    > 70 |     await fileInput.setInputFiles(testFilePath);
         |     ^
      71 |
      72 |     // Wait for parsing
      73 |     await expect(page.locator('[data-testid="loading-overlay"]')).toBeHidden({ timeout: 10000 });
        at /Users/ltw/Documents/GitHub/writersroom/frontend/e2e/upload-workflow.spec.ts:70:5

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ../test-results/upload-workflow-FDX-Upload-1ff41-e-scene-order-from-FDX-file-Google-Chrome/test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ../test-results/upload-workflow-FDX-Upload-1ff41-e-scene-order-from-FDX-file-Google-Chrome/error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|upload-workflow-FDX-Upload-1ff41-e-scene-order-from-FDX-file-Google-Chrome/test-failed-1.png]]

[[ATTACHMENT|upload-workflow-FDX-Upload-1ff41-e-scene-order-from-FDX-file-Google-Chrome/error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="FDX Upload Workflow › should handle large FDX files" classname="upload-workflow.spec.ts" time="6.888">
<properties>
<property name="slow" value="">
</property>
</properties>
<failure message="upload-workflow.spec.ts:88:7 should handle large FDX files" type="FAILURE">
<![CDATA[  [Google Chrome] › upload-workflow.spec.ts:88:7 › FDX Upload Workflow › should handle large FDX files 

    Error: ENOENT: no such file or directory, stat '/Users/ltw/Documents/GitHub/writersroom/frontend/__tests__/fixtures/fdx/large/feature-film.fdx'

      94 |     const fileInput = page.locator('input[type="file"]');
      95 |     const largeFilePath = path.join(__dirname, '../__tests__/fixtures/fdx/large/feature-film.fdx');
    > 96 |     await fileInput.setInputFiles(largeFilePath);
         |     ^
      97 |
      98 |     // Wait for parsing with extended timeout
      99 |     await expect(page.locator('[data-testid="loading-overlay"]')).toBeVisible();
        at /Users/ltw/Documents/GitHub/writersroom/frontend/e2e/upload-workflow.spec.ts:96:5

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ../test-results/upload-workflow-FDX-Upload-9adbb-ould-handle-large-FDX-files-Google-Chrome/test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ../test-results/upload-workflow-FDX-Upload-9adbb-ould-handle-large-FDX-files-Google-Chrome/error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|upload-workflow-FDX-Upload-9adbb-ould-handle-large-FDX-files-Google-Chrome/test-failed-1.png]]

[[ATTACHMENT|upload-workflow-FDX-Upload-9adbb-ould-handle-large-FDX-files-Google-Chrome/error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="FDX Upload Workflow › should support drag and drop upload" classname="upload-workflow.spec.ts" time="7.526">
<failure message="upload-workflow.spec.ts:113:7 should support drag and drop upload" type="FAILURE">
<![CDATA[  [Google Chrome] › upload-workflow.spec.ts:113:7 › FDX Upload Workflow › should support drag and drop upload 

    Error: expect(locator).toBeVisible() failed

    Locator:  locator('[data-testid="upload-area"]')
    Expected: visible
    Received: <element(s) not found>
    Timeout:  5000ms

    Call log:
      - Expect "toBeVisible" with timeout 5000ms
      - waiting for locator('[data-testid="upload-area"]')


      115 |
      116 |     const dropZone = page.locator('[data-testid="upload-area"]');
    > 117 |     await expect(dropZone).toBeVisible();
          |                            ^
      118 |
      119 |     // Create a DataTransfer to simulate drag and drop
      120 |     const testFilePath = path.join(__dirname, '../__tests__/fixtures/fdx/valid/standard-screenplay.fdx');
        at /Users/ltw/Documents/GitHub/writersroom/frontend/e2e/upload-workflow.spec.ts:117:28

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ../test-results/upload-workflow-FDX-Upload-94f38-upport-drag-and-drop-upload-Google-Chrome/test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ../test-results/upload-workflow-FDX-Upload-94f38-upport-drag-and-drop-upload-Google-Chrome/error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|upload-workflow-FDX-Upload-94f38-upport-drag-and-drop-upload-Google-Chrome/test-failed-1.png]]

[[ATTACHMENT|upload-workflow-FDX-Upload-94f38-upport-drag-and-drop-upload-Google-Chrome/error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="FDX Upload Workflow › should maintain editor state after page refresh" classname="upload-workflow.spec.ts" time="2.398">
<failure message="upload-workflow.spec.ts:153:7 should maintain editor state after page refresh" type="FAILURE">
<![CDATA[  [Google Chrome] › upload-workflow.spec.ts:153:7 › FDX Upload Workflow › should maintain editor state after page refresh 

    Error: ENOENT: no such file or directory, stat '/Users/ltw/Documents/GitHub/writersroom/frontend/__tests__/fixtures/fdx/valid/standard-screenplay.fdx'

      157 |     const fileInput = page.locator('input[type="file"]');
      158 |     const testFilePath = path.join(__dirname, '../__tests__/fixtures/fdx/valid/standard-screenplay.fdx');
    > 159 |     await fileInput.setInputFiles(testFilePath);
          |     ^
      160 |
      161 |     // Wait for parsing
      162 |     await expect(page.locator('[data-testid="loading-overlay"]')).toBeHidden({ timeout: 10000 });
        at /Users/ltw/Documents/GitHub/writersroom/frontend/e2e/upload-workflow.spec.ts:159:5

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ../test-results/upload-workflow-FDX-Upload-9f611-or-state-after-page-refresh-Google-Chrome/test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ../test-results/upload-workflow-FDX-Upload-9f611-or-state-after-page-refresh-Google-Chrome/error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|upload-workflow-FDX-Upload-9f611-or-state-after-page-refresh-Google-Chrome/test-failed-1.png]]

[[ATTACHMENT|upload-workflow-FDX-Upload-9f611-or-state-after-page-refresh-Google-Chrome/error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="FDX Upload Workflow › should navigate between scenes via sidebar" classname="upload-workflow.spec.ts" time="2.394">
<failure message="upload-workflow.spec.ts:187:7 should navigate between scenes via sidebar" type="FAILURE">
<![CDATA[  [Google Chrome] › upload-workflow.spec.ts:187:7 › FDX Upload Workflow › should navigate between scenes via sidebar 

    Error: ENOENT: no such file or directory, stat '/Users/ltw/Documents/GitHub/writersroom/frontend/__tests__/fixtures/fdx/valid/multiple-scenes.fdx'

      191 |     const fileInput = page.locator('input[type="file"]');
      192 |     const testFilePath = path.join(__dirname, '../__tests__/fixtures/fdx/valid/multiple-scenes.fdx');
    > 193 |     await fileInput.setInputFiles(testFilePath);
          |     ^
      194 |
      195 |     // Wait for parsing
      196 |     await expect(page.locator('[data-testid="loading-overlay"]')).toBeHidden({ timeout: 10000 });
        at /Users/ltw/Documents/GitHub/writersroom/frontend/e2e/upload-workflow.spec.ts:193:5

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ../test-results/upload-workflow-FDX-Upload-794c8--between-scenes-via-sidebar-Google-Chrome/test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ../test-results/upload-workflow-FDX-Upload-794c8--between-scenes-via-sidebar-Google-Chrome/error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|upload-workflow-FDX-Upload-794c8--between-scenes-via-sidebar-Google-Chrome/test-failed-1.png]]

[[ATTACHMENT|upload-workflow-FDX-Upload-794c8--between-scenes-via-sidebar-Google-Chrome/error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="FDX Upload Workflow › should show scene summaries in sidebar" classname="upload-workflow.spec.ts" time="2.279">
<failure message="upload-workflow.spec.ts:210:7 should show scene summaries in sidebar" type="FAILURE">
<![CDATA[  [Google Chrome] › upload-workflow.spec.ts:210:7 › FDX Upload Workflow › should show scene summaries in sidebar 

    Error: ENOENT: no such file or directory, stat '/Users/ltw/Documents/GitHub/writersroom/frontend/__tests__/fixtures/fdx/valid/standard-screenplay.fdx'

      214 |     const fileInput = page.locator('input[type="file"]');
      215 |     const testFilePath = path.join(__dirname, '../__tests__/fixtures/fdx/valid/standard-screenplay.fdx');
    > 216 |     await fileInput.setInputFiles(testFilePath);
          |     ^
      217 |
      218 |     // Wait for parsing
      219 |     await expect(page.locator('[data-testid="loading-overlay"]')).toBeHidden({ timeout: 10000 });
        at /Users/ltw/Documents/GitHub/writersroom/frontend/e2e/upload-workflow.spec.ts:216:5

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ../test-results/upload-workflow-FDX-Upload-9ffe0--scene-summaries-in-sidebar-Google-Chrome/test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ../test-results/upload-workflow-FDX-Upload-9ffe0--scene-summaries-in-sidebar-Google-Chrome/error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|upload-workflow-FDX-Upload-9ffe0--scene-summaries-in-sidebar-Google-Chrome/test-failed-1.png]]

[[ATTACHMENT|upload-workflow-FDX-Upload-9ffe0--scene-summaries-in-sidebar-Google-Chrome/error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="FDX Upload Workflow › should display scene metadata correctly" classname="upload-workflow.spec.ts" time="2.199">
<failure message="upload-workflow.spec.ts:233:7 should display scene metadata correctly" type="FAILURE">
<![CDATA[  [Google Chrome] › upload-workflow.spec.ts:233:7 › FDX Upload Workflow › should display scene metadata correctly 

    Error: ENOENT: no such file or directory, stat '/Users/ltw/Documents/GitHub/writersroom/frontend/__tests__/fixtures/fdx/valid/standard-screenplay.fdx'

      237 |     const fileInput = page.locator('input[type="file"]');
      238 |     const testFilePath = path.join(__dirname, '../__tests__/fixtures/fdx/valid/standard-screenplay.fdx');
    > 239 |     await fileInput.setInputFiles(testFilePath);
          |     ^
      240 |
      241 |     // Wait for parsing
      242 |     await expect(page.locator('[data-testid="loading-overlay"]')).toBeHidden({ timeout: 10000 });
        at /Users/ltw/Documents/GitHub/writersroom/frontend/e2e/upload-workflow.spec.ts:239:5

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ../test-results/upload-workflow-FDX-Upload-b70a6-ay-scene-metadata-correctly-Google-Chrome/test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ../test-results/upload-workflow-FDX-Upload-b70a6-ay-scene-metadata-correctly-Google-Chrome/error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|upload-workflow-FDX-Upload-b70a6-ay-scene-metadata-correctly-Google-Chrome/test-failed-1.png]]

[[ATTACHMENT|upload-workflow-FDX-Upload-b70a6-ay-scene-metadata-correctly-Google-Chrome/error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Upload Error Handling › should reject non-FDX files" classname="upload-workflow.spec.ts" time="1.662">
<failure message="upload-workflow.spec.ts:274:7 should reject non-FDX files" type="FAILURE">
<![CDATA[  [Google Chrome] › upload-workflow.spec.ts:274:7 › Upload Error Handling › should reject non-FDX files 

    Error: ENOENT: no such file or directory, stat '/Users/ltw/Documents/GitHub/writersroom/frontend/__tests__/fixtures/test-document.pdf'

      277 |     // Try uploading a PDF
      278 |     const pdfPath = path.join(__dirname, '../__tests__/fixtures/test-document.pdf');
    > 279 |     await fileInput.setInputFiles(pdfPath);
          |     ^
      280 |
      281 |     // Should show error
      282 |     await expect(page.locator('[data-testid="error-message"]')).toBeVisible();
        at /Users/ltw/Documents/GitHub/writersroom/frontend/e2e/upload-workflow.spec.ts:279:5

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ../test-results/upload-workflow-Upload-Err-5ebaa-should-reject-non-FDX-files-Google-Chrome/test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ../test-results/upload-workflow-Upload-Err-5ebaa-should-reject-non-FDX-files-Google-Chrome/error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|upload-workflow-Upload-Err-5ebaa-should-reject-non-FDX-files-Google-Chrome/test-failed-1.png]]

[[ATTACHMENT|upload-workflow-Upload-Err-5ebaa-should-reject-non-FDX-files-Google-Chrome/error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Upload Error Handling › should handle empty FDX files gracefully" classname="upload-workflow.spec.ts" time="1.62">
<failure message="upload-workflow.spec.ts:286:7 should handle empty FDX files gracefully" type="FAILURE">
<![CDATA[  [Google Chrome] › upload-workflow.spec.ts:286:7 › Upload Error Handling › should handle empty FDX files gracefully 

    Error: ENOENT: no such file or directory, stat '/Users/ltw/Documents/GitHub/writersroom/frontend/__tests__/fixtures/fdx/edge-cases/empty.fdx'

      289 |     // Upload empty FDX
      290 |     const emptyFDXPath = path.join(__dirname, '../__tests__/fixtures/fdx/edge-cases/empty.fdx');
    > 291 |     await fileInput.setInputFiles(emptyFDXPath);
          |     ^
      292 |
      293 |     // Should either show warning or load empty editor
      294 |     const warning = page.locator('[data-testid="empty-file-warning"]');
        at /Users/ltw/Documents/GitHub/writersroom/frontend/e2e/upload-workflow.spec.ts:291:5

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ../test-results/upload-workflow-Upload-Err-b6b0d--empty-FDX-files-gracefully-Google-Chrome/test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ../test-results/upload-workflow-Upload-Err-b6b0d--empty-FDX-files-gracefully-Google-Chrome/error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|upload-workflow-Upload-Err-b6b0d--empty-FDX-files-gracefully-Google-Chrome/test-failed-1.png]]

[[ATTACHMENT|upload-workflow-Upload-Err-b6b0d--empty-FDX-files-gracefully-Google-Chrome/error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Upload Error Handling › should handle malformed FDX XML" classname="upload-workflow.spec.ts" time="1.267">
<failure message="upload-workflow.spec.ts:300:7 should handle malformed FDX XML" type="FAILURE">
<![CDATA[  [Google Chrome] › upload-workflow.spec.ts:300:7 › Upload Error Handling › should handle malformed FDX XML 

    Error: ENOENT: no such file or directory, stat '/Users/ltw/Documents/GitHub/writersroom/frontend/__tests__/fixtures/fdx/edge-cases/malformed.fdx'

      303 |     // Upload malformed FDX
      304 |     const malformedPath = path.join(__dirname, '../__tests__/fixtures/fdx/edge-cases/malformed.fdx');
    > 305 |     await fileInput.setInputFiles(malformedPath);
          |     ^
      306 |
      307 |     // Should show parsing error
      308 |     await expect(page.locator('[data-testid="error-message"]')).toBeVisible();
        at /Users/ltw/Documents/GitHub/writersroom/frontend/e2e/upload-workflow.spec.ts:305:5

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ../test-results/upload-workflow-Upload-Err-7139f-ld-handle-malformed-FDX-XML-Google-Chrome/test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ../test-results/upload-workflow-Upload-Err-7139f-ld-handle-malformed-FDX-XML-Google-Chrome/error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|upload-workflow-Upload-Err-7139f-ld-handle-malformed-FDX-XML-Google-Chrome/test-failed-1.png]]

[[ATTACHMENT|upload-workflow-Upload-Err-7139f-ld-handle-malformed-FDX-XML-Google-Chrome/error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Upload Error Handling › should provide retry option on upload failure" classname="upload-workflow.spec.ts" time="1.584">
<failure message="upload-workflow.spec.ts:312:7 should provide retry option on upload failure" type="FAILURE">
<![CDATA[  [Google Chrome] › upload-workflow.spec.ts:312:7 › Upload Error Handling › should provide retry option on upload failure 

    Error: ENOENT: no such file or directory, stat '/Users/ltw/Documents/GitHub/writersroom/frontend/__tests__/fixtures/fdx/valid/standard-screenplay.fdx'

      318 |     const fileInput = page.locator('input[type="file"]');
      319 |     const testFilePath = path.join(__dirname, '../__tests__/fixtures/fdx/valid/standard-screenplay.fdx');
    > 320 |     await fileInput.setInputFiles(testFilePath);
          |     ^
      321 |
      322 |     // Should show error with retry button
      323 |     await expect(page.locator('[data-testid="error-message"]')).toBeVisible();
        at /Users/ltw/Documents/GitHub/writersroom/frontend/e2e/upload-workflow.spec.ts:320:5

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ../test-results/upload-workflow-Upload-Err-41bb2-ry-option-on-upload-failure-Google-Chrome/test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ../test-results/upload-workflow-Upload-Err-41bb2-ry-option-on-upload-failure-Google-Chrome/error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|upload-workflow-Upload-Err-41bb2-ry-option-on-upload-failure-Google-Chrome/test-failed-1.png]]

[[ATTACHMENT|upload-workflow-Upload-Err-41bb2-ry-option-on-upload-failure-Google-Chrome/error-context.md]]
]]>
</system-out>
</testcase>
</testsuite>
</testsuites>