"""fix_content_blocks_type

Revision ID: 6d02409f37a6
Revises: 20250122_yjs_primary
Create Date: 2025-10-22 22:35:29.676477

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '6d02409f37a6'
down_revision = '20250122_yjs_primary'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('idx_snapshot_metadata_created_at', table_name='scene_snapshot_metadata')
    op.drop_index('idx_snapshot_metadata_scene', table_name='scene_snapshot_metadata')
    op.drop_table('scene_snapshot_metadata')
    op.alter_column('chat_conversations', 'user_id',
               existing_type=sa.UUID(),
               nullable=False)
    op.alter_column('chat_conversations', 'script_id',
               existing_type=sa.UUID(),
               nullable=False)
    op.alter_column('chat_conversations', 'title',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('chat_conversations', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('chat_conversations', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.create_index(op.f('ix_chat_conversations_conversation_id'), 'chat_conversations', ['conversation_id'], unique=True)
    op.create_index(op.f('ix_chat_conversations_current_scene_id'), 'chat_conversations', ['current_scene_id'], unique=False)
    op.create_index(op.f('ix_chat_conversations_script_id'), 'chat_conversations', ['script_id'], unique=False)
    op.create_index(op.f('ix_chat_conversations_user_id'), 'chat_conversations', ['user_id'], unique=False)
    op.drop_constraint('chat_conversations_current_scene_id_fkey', 'chat_conversations', type_='foreignkey')
    op.create_foreign_key(None, 'chat_conversations', 'scenes', ['current_scene_id'], ['scene_id'], ondelete='SET NULL')
    op.alter_column('chat_messages', 'conversation_id',
               existing_type=sa.UUID(),
               nullable=False)
    op.alter_column('chat_messages', 'sender',
               existing_type=sa.VARCHAR(),
               type_=sa.Enum('USER', 'ASSISTANT', name='messagesender'),
               existing_nullable=False)
    op.alter_column('chat_messages', 'role',
               existing_type=sa.VARCHAR(),
               type_=sa.Enum('USER', 'ASSISTANT', 'SYSTEM', name='messagerole'),
               existing_nullable=True)
    op.alter_column('chat_messages', 'metadata',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               type_=sa.JSON(),
               existing_nullable=True,
               existing_server_default=sa.text("'{}'::jsonb"))
    op.create_index(op.f('ix_chat_messages_conversation_id'), 'chat_messages', ['conversation_id'], unique=False)
    op.create_index(op.f('ix_chat_messages_created_at'), 'chat_messages', ['created_at'], unique=False)
    op.create_index(op.f('ix_chat_messages_message_id'), 'chat_messages', ['message_id'], unique=True)
    op.create_index(op.f('ix_chat_messages_role'), 'chat_messages', ['role'], unique=False)
    op.create_index(op.f('ix_chat_messages_sender'), 'chat_messages', ['sender'], unique=False)
    op.create_index(op.f('ix_chat_messages_summarized'), 'chat_messages', ['summarized'], unique=False)
    op.alter_column('scene_embeddings', 'script_id',
               existing_type=sa.UUID(),
               nullable=False)
    op.alter_column('scene_embeddings', 'scene_id',
               existing_type=sa.UUID(),
               nullable=False)
    op.alter_column('scene_embeddings', 'embedding',
               existing_type=sa.NullType(),
               nullable=False)
    op.alter_column('scene_embeddings', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.create_index(op.f('ix_scene_embeddings_id'), 'scene_embeddings', ['id'], unique=True)
    op.create_index(op.f('ix_scene_embeddings_scene_id'), 'scene_embeddings', ['scene_id'], unique=True)
    op.create_index(op.f('ix_scene_embeddings_script_id'), 'scene_embeddings', ['script_id'], unique=False)
    op.drop_index('idx_scene_snapshots_scene_saved_at', table_name='scene_snapshots')
    op.drop_index('idx_scene_snapshots_scene_version', table_name='scene_snapshots')
    op.drop_constraint('scene_snapshots_scene_version_key', 'scene_snapshots', type_='unique')
    op.create_index('idx_scene_snapshots_scene_id_saved_at', 'scene_snapshots', ['scene_id', 'saved_at'], unique=False)
    op.create_index('idx_scene_snapshots_scene_id_version', 'scene_snapshots', ['scene_id', 'version'], unique=False)
    op.create_index(op.f('ix_scene_snapshots_id'), 'scene_snapshots', ['id'], unique=True)
    op.create_index(op.f('ix_scene_snapshots_saved_at'), 'scene_snapshots', ['saved_at'], unique=False)
    op.create_index(op.f('ix_scene_snapshots_scene_id'), 'scene_snapshots', ['scene_id'], unique=False)
    op.create_index(op.f('ix_scene_snapshots_version'), 'scene_snapshots', ['version'], unique=False)
    op.drop_constraint('scene_snapshots_saved_by_fkey', 'scene_snapshots', type_='foreignkey')
    op.drop_constraint('scene_snapshots_scene_id_fkey', 'scene_snapshots', type_='foreignkey')
    op.create_foreign_key(None, 'scene_snapshots', 'users', ['saved_by'], ['user_id'])
    op.create_foreign_key(None, 'scene_snapshots', 'scenes', ['scene_id'], ['scene_id'], ondelete='CASCADE')
    op.alter_column('scene_versions', 'scene_id',
               existing_type=sa.UUID(),
               nullable=False)
    op.alter_column('scene_versions', 'yjs_update',
               existing_type=postgresql.BYTEA(),
               nullable=False,
               comment='Binary-encoded Yjs update')
    op.alter_column('scene_versions', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.create_index('idx_scene_versions_scene_id_created_at', 'scene_versions', ['scene_id', 'created_at'], unique=False)
    op.create_index(op.f('ix_scene_versions_created_at'), 'scene_versions', ['created_at'], unique=False)
    op.create_index(op.f('ix_scene_versions_scene_id'), 'scene_versions', ['scene_id'], unique=False)
    op.create_index(op.f('ix_scene_versions_version_id'), 'scene_versions', ['version_id'], unique=True)
    op.drop_constraint('fk_scene_versions_compacted_by', 'scene_versions', type_='foreignkey')
    op.drop_constraint('fk_scene_versions_created_by', 'scene_versions', type_='foreignkey')
    op.create_foreign_key(None, 'scene_versions', 'users', ['created_by'], ['user_id'])
    op.create_foreign_key(None, 'scene_versions', 'scene_versions', ['compacted_by'], ['version_id'])
    op.drop_index('idx_scene_write_ops_scene_created_at', table_name='scene_write_ops')
    op.drop_index('idx_scene_write_ops_user_created_at', table_name='scene_write_ops')
    op.create_index('idx_scene_write_ops_scene_id_created_at', 'scene_write_ops', ['scene_id', 'created_at'], unique=False)
    op.create_index('idx_scene_write_ops_user_id_created_at', 'scene_write_ops', ['user_id', 'created_at'], unique=False)
    op.create_index(op.f('ix_scene_write_ops_created_at'), 'scene_write_ops', ['created_at'], unique=False)
    op.create_index(op.f('ix_scene_write_ops_op_id'), 'scene_write_ops', ['op_id'], unique=False)
    op.create_index(op.f('ix_scene_write_ops_scene_id'), 'scene_write_ops', ['scene_id'], unique=False)
    op.create_index(op.f('ix_scene_write_ops_user_id'), 'scene_write_ops', ['user_id'], unique=False)
    op.drop_constraint('scene_write_ops_scene_id_fkey', 'scene_write_ops', type_='foreignkey')
    op.drop_constraint('scene_write_ops_user_id_fkey', 'scene_write_ops', type_='foreignkey')
    op.create_foreign_key(None, 'scene_write_ops', 'users', ['user_id'], ['user_id'])
    op.create_foreign_key(None, 'scene_write_ops', 'scenes', ['scene_id'], ['scene_id'], ondelete='CASCADE')
    op.alter_column('scenes', 'script_id',
               existing_type=sa.UUID(),
               nullable=False)
    op.alter_column('scenes', 'position',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('scenes', 'scene_heading',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('scenes', 'content_blocks',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               nullable=False)
    op.alter_column('scenes', 'characters',
               existing_type=postgresql.ARRAY(sa.TEXT()),
               type_=sa.ARRAY(sa.String()),
               existing_nullable=True)
    op.alter_column('scenes', 'themes',
               existing_type=postgresql.ARRAY(sa.TEXT()),
               type_=sa.ARRAY(sa.String()),
               existing_nullable=True)
    op.alter_column('scenes', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('scenes', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.drop_index('idx_scenes_snapshot_at', table_name='scenes', postgresql_where='(yjs_derived = 1)')
    op.create_index(op.f('ix_scenes_position'), 'scenes', ['position'], unique=False)
    op.create_index(op.f('ix_scenes_scene_id'), 'scenes', ['scene_id'], unique=True)
    op.create_index(op.f('ix_scenes_script_id'), 'scenes', ['script_id'], unique=False)
    op.drop_constraint('scenes_updated_by_fkey', 'scenes', type_='foreignkey')
    op.create_foreign_key(None, 'scenes', 'users', ['updated_by'], ['user_id'])
    op.alter_column('script_collaborators', 'script_id',
               existing_type=sa.UUID(),
               nullable=False)
    op.alter_column('script_collaborators', 'user_id',
               existing_type=sa.UUID(),
               nullable=False)
    op.alter_column('script_collaborators', 'role',
               existing_type=sa.VARCHAR(),
               type_=sa.Enum('OWNER', 'EDITOR', 'VIEWER', name='collaboratorrole'),
               existing_nullable=False)
    op.alter_column('script_collaborators', 'joined_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.create_index(op.f('ix_script_collaborators_script_id'), 'script_collaborators', ['script_id'], unique=False)
    op.create_index(op.f('ix_script_collaborators_user_id'), 'script_collaborators', ['user_id'], unique=False)
    op.alter_column('scripts', 'owner_id',
               existing_type=sa.UUID(),
               nullable=False)
    op.alter_column('scripts', 'current_version',
               existing_type=sa.INTEGER(),
               nullable=False,
               existing_server_default=sa.text('1'))
    op.alter_column('scripts', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('scripts', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.create_index(op.f('ix_scripts_owner_id'), 'scripts', ['owner_id'], unique=False)
    op.create_index(op.f('ix_scripts_script_id'), 'scripts', ['script_id'], unique=True)
    op.drop_constraint('scripts_owner_id_fkey', 'scripts', type_='foreignkey')
    op.create_foreign_key(None, 'scripts', 'users', ['owner_id'], ['user_id'], ondelete='CASCADE')
    op.alter_column('users', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('users', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.drop_constraint('users_firebase_uid_key', 'users', type_='unique')
    op.create_index(op.f('ix_users_firebase_uid'), 'users', ['firebase_uid'], unique=True)
    op.create_index(op.f('ix_users_user_id'), 'users', ['user_id'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_users_user_id'), table_name='users')
    op.drop_index(op.f('ix_users_firebase_uid'), table_name='users')
    op.create_unique_constraint('users_firebase_uid_key', 'users', ['firebase_uid'])
    op.alter_column('users', 'updated_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('users', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.drop_constraint(None, 'scripts', type_='foreignkey')
    op.create_foreign_key('scripts_owner_id_fkey', 'scripts', 'users', ['owner_id'], ['user_id'])
    op.drop_index(op.f('ix_scripts_script_id'), table_name='scripts')
    op.drop_index(op.f('ix_scripts_owner_id'), table_name='scripts')
    op.alter_column('scripts', 'updated_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('scripts', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('scripts', 'current_version',
               existing_type=sa.INTEGER(),
               nullable=True,
               existing_server_default=sa.text('1'))
    op.alter_column('scripts', 'owner_id',
               existing_type=sa.UUID(),
               nullable=True)
    op.drop_index(op.f('ix_script_collaborators_user_id'), table_name='script_collaborators')
    op.drop_index(op.f('ix_script_collaborators_script_id'), table_name='script_collaborators')
    op.alter_column('script_collaborators', 'joined_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('script_collaborators', 'role',
               existing_type=sa.Enum('OWNER', 'EDITOR', 'VIEWER', name='collaboratorrole'),
               type_=sa.VARCHAR(),
               existing_nullable=False)
    op.alter_column('script_collaborators', 'user_id',
               existing_type=sa.UUID(),
               nullable=True)
    op.alter_column('script_collaborators', 'script_id',
               existing_type=sa.UUID(),
               nullable=True)
    op.drop_constraint(None, 'scenes', type_='foreignkey')
    op.create_foreign_key('scenes_updated_by_fkey', 'scenes', 'users', ['updated_by'], ['user_id'], onupdate='CASCADE', ondelete='SET NULL')
    op.drop_index(op.f('ix_scenes_script_id'), table_name='scenes')
    op.drop_index(op.f('ix_scenes_scene_id'), table_name='scenes')
    op.drop_index(op.f('ix_scenes_position'), table_name='scenes')
    op.create_index('idx_scenes_snapshot_at', 'scenes', ['snapshot_at'], unique=False, postgresql_where='(yjs_derived = 1)')
    op.alter_column('scenes', 'updated_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('scenes', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('scenes', 'themes',
               existing_type=sa.ARRAY(sa.String()),
               type_=postgresql.ARRAY(sa.TEXT()),
               existing_nullable=True)
    op.alter_column('scenes', 'characters',
               existing_type=sa.ARRAY(sa.String()),
               type_=postgresql.ARRAY(sa.TEXT()),
               existing_nullable=True)
    op.alter_column('scenes', 'content_blocks',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               nullable=True)
    op.alter_column('scenes', 'scene_heading',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('scenes', 'position',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('scenes', 'script_id',
               existing_type=sa.UUID(),
               nullable=True)
    op.drop_constraint(None, 'scene_write_ops', type_='foreignkey')
    op.drop_constraint(None, 'scene_write_ops', type_='foreignkey')
    op.create_foreign_key('scene_write_ops_user_id_fkey', 'scene_write_ops', 'users', ['user_id'], ['user_id'], onupdate='CASCADE', ondelete='CASCADE')
    op.create_foreign_key('scene_write_ops_scene_id_fkey', 'scene_write_ops', 'scenes', ['scene_id'], ['scene_id'], onupdate='CASCADE', ondelete='CASCADE')
    op.drop_index(op.f('ix_scene_write_ops_user_id'), table_name='scene_write_ops')
    op.drop_index(op.f('ix_scene_write_ops_scene_id'), table_name='scene_write_ops')
    op.drop_index(op.f('ix_scene_write_ops_op_id'), table_name='scene_write_ops')
    op.drop_index(op.f('ix_scene_write_ops_created_at'), table_name='scene_write_ops')
    op.drop_index('idx_scene_write_ops_user_id_created_at', table_name='scene_write_ops')
    op.drop_index('idx_scene_write_ops_scene_id_created_at', table_name='scene_write_ops')
    op.create_index('idx_scene_write_ops_user_created_at', 'scene_write_ops', ['user_id', sa.text('created_at DESC')], unique=False)
    op.create_index('idx_scene_write_ops_scene_created_at', 'scene_write_ops', ['scene_id', sa.text('created_at DESC')], unique=False)
    op.drop_constraint(None, 'scene_versions', type_='foreignkey')
    op.drop_constraint(None, 'scene_versions', type_='foreignkey')
    op.create_foreign_key('fk_scene_versions_created_by', 'scene_versions', 'users', ['created_by'], ['user_id'], ondelete='SET NULL')
    op.create_foreign_key('fk_scene_versions_compacted_by', 'scene_versions', 'scene_versions', ['compacted_by'], ['version_id'], ondelete='SET NULL')
    op.drop_index(op.f('ix_scene_versions_version_id'), table_name='scene_versions')
    op.drop_index(op.f('ix_scene_versions_scene_id'), table_name='scene_versions')
    op.drop_index(op.f('ix_scene_versions_created_at'), table_name='scene_versions')
    op.drop_index('idx_scene_versions_scene_id_created_at', table_name='scene_versions')
    op.alter_column('scene_versions', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('scene_versions', 'yjs_update',
               existing_type=postgresql.BYTEA(),
               nullable=True,
               comment=None,
               existing_comment='Binary-encoded Yjs update')
    op.alter_column('scene_versions', 'scene_id',
               existing_type=sa.UUID(),
               nullable=True)
    op.drop_constraint(None, 'scene_snapshots', type_='foreignkey')
    op.drop_constraint(None, 'scene_snapshots', type_='foreignkey')
    op.create_foreign_key('scene_snapshots_scene_id_fkey', 'scene_snapshots', 'scenes', ['scene_id'], ['scene_id'], onupdate='CASCADE', ondelete='CASCADE')
    op.create_foreign_key('scene_snapshots_saved_by_fkey', 'scene_snapshots', 'users', ['saved_by'], ['user_id'], onupdate='CASCADE', ondelete='SET NULL')
    op.drop_index(op.f('ix_scene_snapshots_version'), table_name='scene_snapshots')
    op.drop_index(op.f('ix_scene_snapshots_scene_id'), table_name='scene_snapshots')
    op.drop_index(op.f('ix_scene_snapshots_saved_at'), table_name='scene_snapshots')
    op.drop_index(op.f('ix_scene_snapshots_id'), table_name='scene_snapshots')
    op.drop_index('idx_scene_snapshots_scene_id_version', table_name='scene_snapshots')
    op.drop_index('idx_scene_snapshots_scene_id_saved_at', table_name='scene_snapshots')
    op.create_unique_constraint('scene_snapshots_scene_version_key', 'scene_snapshots', ['scene_id', 'version'])
    op.create_index('idx_scene_snapshots_scene_version', 'scene_snapshots', ['scene_id', sa.text('version DESC')], unique=False)
    op.create_index('idx_scene_snapshots_scene_saved_at', 'scene_snapshots', ['scene_id', sa.text('saved_at DESC')], unique=False)
    op.drop_index(op.f('ix_scene_embeddings_script_id'), table_name='scene_embeddings')
    op.drop_index(op.f('ix_scene_embeddings_scene_id'), table_name='scene_embeddings')
    op.drop_index(op.f('ix_scene_embeddings_id'), table_name='scene_embeddings')
    op.alter_column('scene_embeddings', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('scene_embeddings', 'embedding',
               existing_type=sa.NullType(),
               nullable=True)
    op.alter_column('scene_embeddings', 'scene_id',
               existing_type=sa.UUID(),
               nullable=True)
    op.alter_column('scene_embeddings', 'script_id',
               existing_type=sa.UUID(),
               nullable=True)
    op.drop_index(op.f('ix_chat_messages_summarized'), table_name='chat_messages')
    op.drop_index(op.f('ix_chat_messages_sender'), table_name='chat_messages')
    op.drop_index(op.f('ix_chat_messages_role'), table_name='chat_messages')
    op.drop_index(op.f('ix_chat_messages_message_id'), table_name='chat_messages')
    op.drop_index(op.f('ix_chat_messages_created_at'), table_name='chat_messages')
    op.drop_index(op.f('ix_chat_messages_conversation_id'), table_name='chat_messages')
    op.alter_column('chat_messages', 'metadata',
               existing_type=sa.JSON(),
               type_=postgresql.JSONB(astext_type=sa.Text()),
               existing_nullable=True,
               existing_server_default=sa.text("'{}'::jsonb"))
    op.alter_column('chat_messages', 'role',
               existing_type=sa.Enum('USER', 'ASSISTANT', 'SYSTEM', name='messagerole'),
               type_=sa.VARCHAR(),
               existing_nullable=True)
    op.alter_column('chat_messages', 'sender',
               existing_type=sa.Enum('USER', 'ASSISTANT', name='messagesender'),
               type_=sa.VARCHAR(),
               existing_nullable=False)
    op.alter_column('chat_messages', 'conversation_id',
               existing_type=sa.UUID(),
               nullable=True)
    op.drop_constraint(None, 'chat_conversations', type_='foreignkey')
    op.create_foreign_key('chat_conversations_current_scene_id_fkey', 'chat_conversations', 'scenes', ['current_scene_id'], ['scene_id'])
    op.drop_index(op.f('ix_chat_conversations_user_id'), table_name='chat_conversations')
    op.drop_index(op.f('ix_chat_conversations_script_id'), table_name='chat_conversations')
    op.drop_index(op.f('ix_chat_conversations_current_scene_id'), table_name='chat_conversations')
    op.drop_index(op.f('ix_chat_conversations_conversation_id'), table_name='chat_conversations')
    op.alter_column('chat_conversations', 'updated_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('chat_conversations', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('chat_conversations', 'title',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('chat_conversations', 'script_id',
               existing_type=sa.UUID(),
               nullable=True)
    op.alter_column('chat_conversations', 'user_id',
               existing_type=sa.UUID(),
               nullable=True)
    op.create_table('scene_snapshot_metadata',
    sa.Column('snapshot_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('scene_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('snapshot_source', sa.VARCHAR(length=20), autoincrement=False, nullable=False, comment='Source: yjs, manual, import, migrated, compacted'),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('created_by', sa.UUID(), autoincrement=False, nullable=True, comment='User who triggered snapshot (null for automatic)'),
    sa.Column('yjs_version_count', sa.INTEGER(), autoincrement=False, nullable=False, comment='Number of Yjs updates at snapshot time'),
    sa.Column('yjs_latest_version_id', sa.UUID(), autoincrement=False, nullable=True, comment='Latest Yjs version included in snapshot'),
    sa.Column('yjs_checksum', sa.VARCHAR(length=64), autoincrement=False, nullable=False, comment='SHA256 checksum of Yjs state'),
    sa.Column('generation_time_ms', sa.INTEGER(), autoincrement=False, nullable=True, comment='Time taken to generate snapshot in milliseconds'),
    sa.Column('snapshot_size_bytes', sa.INTEGER(), autoincrement=False, nullable=True, comment='Size of generated snapshot in bytes'),
    sa.ForeignKeyConstraint(['created_by'], ['users.user_id'], name='scene_snapshot_metadata_created_by_fkey', ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['scene_id'], ['scenes.scene_id'], name='scene_snapshot_metadata_scene_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['yjs_latest_version_id'], ['scene_versions.version_id'], name='scene_snapshot_metadata_yjs_latest_version_id_fkey', ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('snapshot_id', name='scene_snapshot_metadata_pkey')
    )
    op.create_index('idx_snapshot_metadata_scene', 'scene_snapshot_metadata', ['scene_id', 'created_at'], unique=False)
    op.create_index('idx_snapshot_metadata_created_at', 'scene_snapshot_metadata', ['created_at'], unique=False)
    # ### end Alembic commands ###
